// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data_coord.proto

package datapb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	commonpb "github.com/milvus-io/milvus/api/commonpb"
	milvuspb "github.com/milvus-io/milvus/api/milvuspb"
	schemapb "github.com/milvus-io/milvus/api/schemapb"
	internalpb "github.com/milvus-io/milvus/internal/proto/internalpb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChannelWatchState int32

const (
	ChannelWatchState_Uncomplete     ChannelWatchState = 0
	ChannelWatchState_Complete       ChannelWatchState = 1
	ChannelWatchState_ToWatch        ChannelWatchState = 2
	ChannelWatchState_WatchSuccess   ChannelWatchState = 3
	ChannelWatchState_WatchFailure   ChannelWatchState = 4
	ChannelWatchState_ToRelease      ChannelWatchState = 5
	ChannelWatchState_ReleaseSuccess ChannelWatchState = 6
	ChannelWatchState_ReleaseFailure ChannelWatchState = 7
)

var ChannelWatchState_name = map[int32]string{
	0: "Uncomplete",
	1: "Complete",
	2: "ToWatch",
	3: "WatchSuccess",
	4: "WatchFailure",
	5: "ToRelease",
	6: "ReleaseSuccess",
	7: "ReleaseFailure",
}

var ChannelWatchState_value = map[string]int32{
	"Uncomplete":     0,
	"Complete":       1,
	"ToWatch":        2,
	"WatchSuccess":   3,
	"WatchFailure":   4,
	"ToRelease":      5,
	"ReleaseSuccess": 6,
	"ReleaseFailure": 7,
}

func (x ChannelWatchState) String() string {
	return proto.EnumName(ChannelWatchState_name, int32(x))
}

func (ChannelWatchState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{0}
}

type CompactionType int32

const (
	CompactionType_UndefinedCompaction CompactionType = 0
	CompactionType_MergeCompaction     CompactionType = 2
	CompactionType_MixCompaction       CompactionType = 3
)

var CompactionType_name = map[int32]string{
	0: "UndefinedCompaction",
	2: "MergeCompaction",
	3: "MixCompaction",
}

var CompactionType_value = map[string]int32{
	"UndefinedCompaction": 0,
	"MergeCompaction":     2,
	"MixCompaction":       3,
}

func (x CompactionType) String() string {
	return proto.EnumName(CompactionType_name, int32(x))
}

func (CompactionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{1}
}

// TODO: import google/protobuf/empty.proto
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type FlushRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	SegmentIDs           []int64           `protobuf:"varint,3,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	CollectionID         int64             `protobuf:"varint,4,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FlushRequest) Reset()         { *m = FlushRequest{} }
func (m *FlushRequest) String() string { return proto.CompactTextString(m) }
func (*FlushRequest) ProtoMessage()    {}
func (*FlushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{1}
}

func (m *FlushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushRequest.Unmarshal(m, b)
}
func (m *FlushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushRequest.Marshal(b, m, deterministic)
}
func (m *FlushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushRequest.Merge(m, src)
}
func (m *FlushRequest) XXX_Size() int {
	return xxx_messageInfo_FlushRequest.Size(m)
}
func (m *FlushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FlushRequest proto.InternalMessageInfo

func (m *FlushRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *FlushRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *FlushRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *FlushRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

type FlushResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	DbID                 int64            `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64            `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	SegmentIDs           []int64          `protobuf:"varint,4,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	FlushSegmentIDs      []int64          `protobuf:"varint,5,rep,packed,name=flushSegmentIDs,proto3" json:"flushSegmentIDs,omitempty"`
	TimeOfSeal           int64            `protobuf:"varint,6,opt,name=timeOfSeal,proto3" json:"timeOfSeal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *FlushResponse) Reset()         { *m = FlushResponse{} }
func (m *FlushResponse) String() string { return proto.CompactTextString(m) }
func (*FlushResponse) ProtoMessage()    {}
func (*FlushResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{2}
}

func (m *FlushResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushResponse.Unmarshal(m, b)
}
func (m *FlushResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushResponse.Marshal(b, m, deterministic)
}
func (m *FlushResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushResponse.Merge(m, src)
}
func (m *FlushResponse) XXX_Size() int {
	return xxx_messageInfo_FlushResponse.Size(m)
}
func (m *FlushResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FlushResponse proto.InternalMessageInfo

func (m *FlushResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *FlushResponse) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *FlushResponse) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *FlushResponse) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *FlushResponse) GetFlushSegmentIDs() []int64 {
	if m != nil {
		return m.FlushSegmentIDs
	}
	return nil
}

func (m *FlushResponse) GetTimeOfSeal() int64 {
	if m != nil {
		return m.TimeOfSeal
	}
	return 0
}

type SegmentIDRequest struct {
	Count                uint32   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	ChannelName          string   `protobuf:"bytes,2,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	CollectionID         int64    `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID          int64    `protobuf:"varint,4,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	IsImport             bool     `protobuf:"varint,5,opt,name=isImport,proto3" json:"isImport,omitempty"`
	ImportTaskID         int64    `protobuf:"varint,6,opt,name=importTaskID,proto3" json:"importTaskID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentIDRequest) Reset()         { *m = SegmentIDRequest{} }
func (m *SegmentIDRequest) String() string { return proto.CompactTextString(m) }
func (*SegmentIDRequest) ProtoMessage()    {}
func (*SegmentIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{3}
}

func (m *SegmentIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentIDRequest.Unmarshal(m, b)
}
func (m *SegmentIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentIDRequest.Marshal(b, m, deterministic)
}
func (m *SegmentIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentIDRequest.Merge(m, src)
}
func (m *SegmentIDRequest) XXX_Size() int {
	return xxx_messageInfo_SegmentIDRequest.Size(m)
}
func (m *SegmentIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentIDRequest proto.InternalMessageInfo

func (m *SegmentIDRequest) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SegmentIDRequest) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *SegmentIDRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SegmentIDRequest) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *SegmentIDRequest) GetIsImport() bool {
	if m != nil {
		return m.IsImport
	}
	return false
}

func (m *SegmentIDRequest) GetImportTaskID() int64 {
	if m != nil {
		return m.ImportTaskID
	}
	return 0
}

type AssignSegmentIDRequest struct {
	NodeID               int64               `protobuf:"varint,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	PeerRole             string              `protobuf:"bytes,2,opt,name=peer_role,json=peerRole,proto3" json:"peer_role,omitempty"`
	SegmentIDRequests    []*SegmentIDRequest `protobuf:"bytes,3,rep,name=segmentIDRequests,proto3" json:"segmentIDRequests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AssignSegmentIDRequest) Reset()         { *m = AssignSegmentIDRequest{} }
func (m *AssignSegmentIDRequest) String() string { return proto.CompactTextString(m) }
func (*AssignSegmentIDRequest) ProtoMessage()    {}
func (*AssignSegmentIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{4}
}

func (m *AssignSegmentIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignSegmentIDRequest.Unmarshal(m, b)
}
func (m *AssignSegmentIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignSegmentIDRequest.Marshal(b, m, deterministic)
}
func (m *AssignSegmentIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignSegmentIDRequest.Merge(m, src)
}
func (m *AssignSegmentIDRequest) XXX_Size() int {
	return xxx_messageInfo_AssignSegmentIDRequest.Size(m)
}
func (m *AssignSegmentIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignSegmentIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignSegmentIDRequest proto.InternalMessageInfo

func (m *AssignSegmentIDRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *AssignSegmentIDRequest) GetPeerRole() string {
	if m != nil {
		return m.PeerRole
	}
	return ""
}

func (m *AssignSegmentIDRequest) GetSegmentIDRequests() []*SegmentIDRequest {
	if m != nil {
		return m.SegmentIDRequests
	}
	return nil
}

type SegmentIDAssignment struct {
	SegID                int64            `protobuf:"varint,1,opt,name=segID,proto3" json:"segID,omitempty"`
	ChannelName          string           `protobuf:"bytes,2,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	Count                uint32           `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	CollectionID         int64            `protobuf:"varint,4,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID          int64            `protobuf:"varint,5,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	ExpireTime           uint64           `protobuf:"varint,6,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	Status               *commonpb.Status `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SegmentIDAssignment) Reset()         { *m = SegmentIDAssignment{} }
func (m *SegmentIDAssignment) String() string { return proto.CompactTextString(m) }
func (*SegmentIDAssignment) ProtoMessage()    {}
func (*SegmentIDAssignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{5}
}

func (m *SegmentIDAssignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentIDAssignment.Unmarshal(m, b)
}
func (m *SegmentIDAssignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentIDAssignment.Marshal(b, m, deterministic)
}
func (m *SegmentIDAssignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentIDAssignment.Merge(m, src)
}
func (m *SegmentIDAssignment) XXX_Size() int {
	return xxx_messageInfo_SegmentIDAssignment.Size(m)
}
func (m *SegmentIDAssignment) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentIDAssignment.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentIDAssignment proto.InternalMessageInfo

func (m *SegmentIDAssignment) GetSegID() int64 {
	if m != nil {
		return m.SegID
	}
	return 0
}

func (m *SegmentIDAssignment) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *SegmentIDAssignment) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SegmentIDAssignment) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SegmentIDAssignment) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *SegmentIDAssignment) GetExpireTime() uint64 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *SegmentIDAssignment) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type AssignSegmentIDResponse struct {
	SegIDAssignments     []*SegmentIDAssignment `protobuf:"bytes,1,rep,name=segIDAssignments,proto3" json:"segIDAssignments,omitempty"`
	Status               *commonpb.Status       `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AssignSegmentIDResponse) Reset()         { *m = AssignSegmentIDResponse{} }
func (m *AssignSegmentIDResponse) String() string { return proto.CompactTextString(m) }
func (*AssignSegmentIDResponse) ProtoMessage()    {}
func (*AssignSegmentIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{6}
}

func (m *AssignSegmentIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignSegmentIDResponse.Unmarshal(m, b)
}
func (m *AssignSegmentIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignSegmentIDResponse.Marshal(b, m, deterministic)
}
func (m *AssignSegmentIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignSegmentIDResponse.Merge(m, src)
}
func (m *AssignSegmentIDResponse) XXX_Size() int {
	return xxx_messageInfo_AssignSegmentIDResponse.Size(m)
}
func (m *AssignSegmentIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignSegmentIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssignSegmentIDResponse proto.InternalMessageInfo

func (m *AssignSegmentIDResponse) GetSegIDAssignments() []*SegmentIDAssignment {
	if m != nil {
		return m.SegIDAssignments
	}
	return nil
}

func (m *AssignSegmentIDResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetSegmentStatesRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentIDs           []int64           `protobuf:"varint,2,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetSegmentStatesRequest) Reset()         { *m = GetSegmentStatesRequest{} }
func (m *GetSegmentStatesRequest) String() string { return proto.CompactTextString(m) }
func (*GetSegmentStatesRequest) ProtoMessage()    {}
func (*GetSegmentStatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{7}
}

func (m *GetSegmentStatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentStatesRequest.Unmarshal(m, b)
}
func (m *GetSegmentStatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentStatesRequest.Marshal(b, m, deterministic)
}
func (m *GetSegmentStatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentStatesRequest.Merge(m, src)
}
func (m *GetSegmentStatesRequest) XXX_Size() int {
	return xxx_messageInfo_GetSegmentStatesRequest.Size(m)
}
func (m *GetSegmentStatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentStatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentStatesRequest proto.InternalMessageInfo

func (m *GetSegmentStatesRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetSegmentStatesRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

type SegmentStateInfo struct {
	SegmentID            int64                   `protobuf:"varint,1,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	State                commonpb.SegmentState   `protobuf:"varint,2,opt,name=state,proto3,enum=milvus.proto.common.SegmentState" json:"state,omitempty"`
	StartPosition        *internalpb.MsgPosition `protobuf:"bytes,3,opt,name=start_position,json=startPosition,proto3" json:"start_position,omitempty"`
	EndPosition          *internalpb.MsgPosition `protobuf:"bytes,4,opt,name=end_position,json=endPosition,proto3" json:"end_position,omitempty"`
	Status               *commonpb.Status        `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SegmentStateInfo) Reset()         { *m = SegmentStateInfo{} }
func (m *SegmentStateInfo) String() string { return proto.CompactTextString(m) }
func (*SegmentStateInfo) ProtoMessage()    {}
func (*SegmentStateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{8}
}

func (m *SegmentStateInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentStateInfo.Unmarshal(m, b)
}
func (m *SegmentStateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentStateInfo.Marshal(b, m, deterministic)
}
func (m *SegmentStateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentStateInfo.Merge(m, src)
}
func (m *SegmentStateInfo) XXX_Size() int {
	return xxx_messageInfo_SegmentStateInfo.Size(m)
}
func (m *SegmentStateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentStateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentStateInfo proto.InternalMessageInfo

func (m *SegmentStateInfo) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SegmentStateInfo) GetState() commonpb.SegmentState {
	if m != nil {
		return m.State
	}
	return commonpb.SegmentState_SegmentStateNone
}

func (m *SegmentStateInfo) GetStartPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.StartPosition
	}
	return nil
}

func (m *SegmentStateInfo) GetEndPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.EndPosition
	}
	return nil
}

func (m *SegmentStateInfo) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetSegmentStatesResponse struct {
	Status               *commonpb.Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	States               []*SegmentStateInfo `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetSegmentStatesResponse) Reset()         { *m = GetSegmentStatesResponse{} }
func (m *GetSegmentStatesResponse) String() string { return proto.CompactTextString(m) }
func (*GetSegmentStatesResponse) ProtoMessage()    {}
func (*GetSegmentStatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{9}
}

func (m *GetSegmentStatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentStatesResponse.Unmarshal(m, b)
}
func (m *GetSegmentStatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentStatesResponse.Marshal(b, m, deterministic)
}
func (m *GetSegmentStatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentStatesResponse.Merge(m, src)
}
func (m *GetSegmentStatesResponse) XXX_Size() int {
	return xxx_messageInfo_GetSegmentStatesResponse.Size(m)
}
func (m *GetSegmentStatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentStatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentStatesResponse proto.InternalMessageInfo

func (m *GetSegmentStatesResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetSegmentStatesResponse) GetStates() []*SegmentStateInfo {
	if m != nil {
		return m.States
	}
	return nil
}

type GetSegmentInfoRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentIDs           []int64           `protobuf:"varint,2,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	IncludeUnHealthy     bool              `protobuf:"varint,3,opt,name=includeUnHealthy,proto3" json:"includeUnHealthy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetSegmentInfoRequest) Reset()         { *m = GetSegmentInfoRequest{} }
func (m *GetSegmentInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetSegmentInfoRequest) ProtoMessage()    {}
func (*GetSegmentInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{10}
}

func (m *GetSegmentInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentInfoRequest.Unmarshal(m, b)
}
func (m *GetSegmentInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetSegmentInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentInfoRequest.Merge(m, src)
}
func (m *GetSegmentInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetSegmentInfoRequest.Size(m)
}
func (m *GetSegmentInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentInfoRequest proto.InternalMessageInfo

func (m *GetSegmentInfoRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetSegmentInfoRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *GetSegmentInfoRequest) GetIncludeUnHealthy() bool {
	if m != nil {
		return m.IncludeUnHealthy
	}
	return false
}

type GetSegmentInfoResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Infos                []*SegmentInfo   `protobuf:"bytes,2,rep,name=infos,proto3" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetSegmentInfoResponse) Reset()         { *m = GetSegmentInfoResponse{} }
func (m *GetSegmentInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetSegmentInfoResponse) ProtoMessage()    {}
func (*GetSegmentInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{11}
}

func (m *GetSegmentInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentInfoResponse.Unmarshal(m, b)
}
func (m *GetSegmentInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetSegmentInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentInfoResponse.Merge(m, src)
}
func (m *GetSegmentInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetSegmentInfoResponse.Size(m)
}
func (m *GetSegmentInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentInfoResponse proto.InternalMessageInfo

func (m *GetSegmentInfoResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetSegmentInfoResponse) GetInfos() []*SegmentInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

type GetInsertBinlogPathsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentID            int64             `protobuf:"varint,2,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetInsertBinlogPathsRequest) Reset()         { *m = GetInsertBinlogPathsRequest{} }
func (m *GetInsertBinlogPathsRequest) String() string { return proto.CompactTextString(m) }
func (*GetInsertBinlogPathsRequest) ProtoMessage()    {}
func (*GetInsertBinlogPathsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{12}
}

func (m *GetInsertBinlogPathsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInsertBinlogPathsRequest.Unmarshal(m, b)
}
func (m *GetInsertBinlogPathsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInsertBinlogPathsRequest.Marshal(b, m, deterministic)
}
func (m *GetInsertBinlogPathsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInsertBinlogPathsRequest.Merge(m, src)
}
func (m *GetInsertBinlogPathsRequest) XXX_Size() int {
	return xxx_messageInfo_GetInsertBinlogPathsRequest.Size(m)
}
func (m *GetInsertBinlogPathsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInsertBinlogPathsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInsertBinlogPathsRequest proto.InternalMessageInfo

func (m *GetInsertBinlogPathsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetInsertBinlogPathsRequest) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

type GetInsertBinlogPathsResponse struct {
	FieldIDs             []int64                  `protobuf:"varint,1,rep,packed,name=fieldIDs,proto3" json:"fieldIDs,omitempty"`
	Paths                []*internalpb.StringList `protobuf:"bytes,2,rep,name=paths,proto3" json:"paths,omitempty"`
	Status               *commonpb.Status         `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetInsertBinlogPathsResponse) Reset()         { *m = GetInsertBinlogPathsResponse{} }
func (m *GetInsertBinlogPathsResponse) String() string { return proto.CompactTextString(m) }
func (*GetInsertBinlogPathsResponse) ProtoMessage()    {}
func (*GetInsertBinlogPathsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{13}
}

func (m *GetInsertBinlogPathsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInsertBinlogPathsResponse.Unmarshal(m, b)
}
func (m *GetInsertBinlogPathsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInsertBinlogPathsResponse.Marshal(b, m, deterministic)
}
func (m *GetInsertBinlogPathsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInsertBinlogPathsResponse.Merge(m, src)
}
func (m *GetInsertBinlogPathsResponse) XXX_Size() int {
	return xxx_messageInfo_GetInsertBinlogPathsResponse.Size(m)
}
func (m *GetInsertBinlogPathsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInsertBinlogPathsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInsertBinlogPathsResponse proto.InternalMessageInfo

func (m *GetInsertBinlogPathsResponse) GetFieldIDs() []int64 {
	if m != nil {
		return m.FieldIDs
	}
	return nil
}

func (m *GetInsertBinlogPathsResponse) GetPaths() []*internalpb.StringList {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *GetInsertBinlogPathsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetCollectionStatisticsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetCollectionStatisticsRequest) Reset()         { *m = GetCollectionStatisticsRequest{} }
func (m *GetCollectionStatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*GetCollectionStatisticsRequest) ProtoMessage()    {}
func (*GetCollectionStatisticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{14}
}

func (m *GetCollectionStatisticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCollectionStatisticsRequest.Unmarshal(m, b)
}
func (m *GetCollectionStatisticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCollectionStatisticsRequest.Marshal(b, m, deterministic)
}
func (m *GetCollectionStatisticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCollectionStatisticsRequest.Merge(m, src)
}
func (m *GetCollectionStatisticsRequest) XXX_Size() int {
	return xxx_messageInfo_GetCollectionStatisticsRequest.Size(m)
}
func (m *GetCollectionStatisticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCollectionStatisticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCollectionStatisticsRequest proto.InternalMessageInfo

func (m *GetCollectionStatisticsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetCollectionStatisticsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *GetCollectionStatisticsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

type GetCollectionStatisticsResponse struct {
	Stats                []*commonpb.KeyValuePair `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	Status               *commonpb.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetCollectionStatisticsResponse) Reset()         { *m = GetCollectionStatisticsResponse{} }
func (m *GetCollectionStatisticsResponse) String() string { return proto.CompactTextString(m) }
func (*GetCollectionStatisticsResponse) ProtoMessage()    {}
func (*GetCollectionStatisticsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{15}
}

func (m *GetCollectionStatisticsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCollectionStatisticsResponse.Unmarshal(m, b)
}
func (m *GetCollectionStatisticsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCollectionStatisticsResponse.Marshal(b, m, deterministic)
}
func (m *GetCollectionStatisticsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCollectionStatisticsResponse.Merge(m, src)
}
func (m *GetCollectionStatisticsResponse) XXX_Size() int {
	return xxx_messageInfo_GetCollectionStatisticsResponse.Size(m)
}
func (m *GetCollectionStatisticsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCollectionStatisticsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCollectionStatisticsResponse proto.InternalMessageInfo

func (m *GetCollectionStatisticsResponse) GetStats() []*commonpb.KeyValuePair {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *GetCollectionStatisticsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetPartitionStatisticsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionIDs         []int64           `protobuf:"varint,4,rep,packed,name=partitionIDs,proto3" json:"partitionIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetPartitionStatisticsRequest) Reset()         { *m = GetPartitionStatisticsRequest{} }
func (m *GetPartitionStatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPartitionStatisticsRequest) ProtoMessage()    {}
func (*GetPartitionStatisticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{16}
}

func (m *GetPartitionStatisticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPartitionStatisticsRequest.Unmarshal(m, b)
}
func (m *GetPartitionStatisticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPartitionStatisticsRequest.Marshal(b, m, deterministic)
}
func (m *GetPartitionStatisticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPartitionStatisticsRequest.Merge(m, src)
}
func (m *GetPartitionStatisticsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPartitionStatisticsRequest.Size(m)
}
func (m *GetPartitionStatisticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPartitionStatisticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPartitionStatisticsRequest proto.InternalMessageInfo

func (m *GetPartitionStatisticsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetPartitionStatisticsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *GetPartitionStatisticsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *GetPartitionStatisticsRequest) GetPartitionIDs() []int64 {
	if m != nil {
		return m.PartitionIDs
	}
	return nil
}

type GetPartitionStatisticsResponse struct {
	Stats                []*commonpb.KeyValuePair `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	Status               *commonpb.Status         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetPartitionStatisticsResponse) Reset()         { *m = GetPartitionStatisticsResponse{} }
func (m *GetPartitionStatisticsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPartitionStatisticsResponse) ProtoMessage()    {}
func (*GetPartitionStatisticsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{17}
}

func (m *GetPartitionStatisticsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPartitionStatisticsResponse.Unmarshal(m, b)
}
func (m *GetPartitionStatisticsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPartitionStatisticsResponse.Marshal(b, m, deterministic)
}
func (m *GetPartitionStatisticsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPartitionStatisticsResponse.Merge(m, src)
}
func (m *GetPartitionStatisticsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPartitionStatisticsResponse.Size(m)
}
func (m *GetPartitionStatisticsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPartitionStatisticsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPartitionStatisticsResponse proto.InternalMessageInfo

func (m *GetPartitionStatisticsResponse) GetStats() []*commonpb.KeyValuePair {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *GetPartitionStatisticsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetSegmentInfoChannelRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSegmentInfoChannelRequest) Reset()         { *m = GetSegmentInfoChannelRequest{} }
func (m *GetSegmentInfoChannelRequest) String() string { return proto.CompactTextString(m) }
func (*GetSegmentInfoChannelRequest) ProtoMessage()    {}
func (*GetSegmentInfoChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{18}
}

func (m *GetSegmentInfoChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSegmentInfoChannelRequest.Unmarshal(m, b)
}
func (m *GetSegmentInfoChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSegmentInfoChannelRequest.Marshal(b, m, deterministic)
}
func (m *GetSegmentInfoChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSegmentInfoChannelRequest.Merge(m, src)
}
func (m *GetSegmentInfoChannelRequest) XXX_Size() int {
	return xxx_messageInfo_GetSegmentInfoChannelRequest.Size(m)
}
func (m *GetSegmentInfoChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSegmentInfoChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSegmentInfoChannelRequest proto.InternalMessageInfo

type AcquireSegmentLockRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	NodeID               int64             `protobuf:"varint,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	SegmentIDs           []int64           `protobuf:"varint,3,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	TaskID               int64             `protobuf:"varint,4,opt,name=taskID,proto3" json:"taskID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AcquireSegmentLockRequest) Reset()         { *m = AcquireSegmentLockRequest{} }
func (m *AcquireSegmentLockRequest) String() string { return proto.CompactTextString(m) }
func (*AcquireSegmentLockRequest) ProtoMessage()    {}
func (*AcquireSegmentLockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{19}
}

func (m *AcquireSegmentLockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireSegmentLockRequest.Unmarshal(m, b)
}
func (m *AcquireSegmentLockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireSegmentLockRequest.Marshal(b, m, deterministic)
}
func (m *AcquireSegmentLockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireSegmentLockRequest.Merge(m, src)
}
func (m *AcquireSegmentLockRequest) XXX_Size() int {
	return xxx_messageInfo_AcquireSegmentLockRequest.Size(m)
}
func (m *AcquireSegmentLockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireSegmentLockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireSegmentLockRequest proto.InternalMessageInfo

func (m *AcquireSegmentLockRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *AcquireSegmentLockRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *AcquireSegmentLockRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *AcquireSegmentLockRequest) GetTaskID() int64 {
	if m != nil {
		return m.TaskID
	}
	return 0
}

type ReleaseSegmentLockRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	NodeID               int64             `protobuf:"varint,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	SegmentIDs           []int64           `protobuf:"varint,3,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	TaskID               int64             `protobuf:"varint,4,opt,name=taskID,proto3" json:"taskID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReleaseSegmentLockRequest) Reset()         { *m = ReleaseSegmentLockRequest{} }
func (m *ReleaseSegmentLockRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseSegmentLockRequest) ProtoMessage()    {}
func (*ReleaseSegmentLockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{20}
}

func (m *ReleaseSegmentLockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseSegmentLockRequest.Unmarshal(m, b)
}
func (m *ReleaseSegmentLockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseSegmentLockRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseSegmentLockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseSegmentLockRequest.Merge(m, src)
}
func (m *ReleaseSegmentLockRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseSegmentLockRequest.Size(m)
}
func (m *ReleaseSegmentLockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseSegmentLockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseSegmentLockRequest proto.InternalMessageInfo

func (m *ReleaseSegmentLockRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ReleaseSegmentLockRequest) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *ReleaseSegmentLockRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *ReleaseSegmentLockRequest) GetTaskID() int64 {
	if m != nil {
		return m.TaskID
	}
	return 0
}

type VchannelInfo struct {
	CollectionID         int64                   `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	ChannelName          string                  `protobuf:"bytes,2,opt,name=channelName,proto3" json:"channelName,omitempty"`
	SeekPosition         *internalpb.MsgPosition `protobuf:"bytes,3,opt,name=seek_position,json=seekPosition,proto3" json:"seek_position,omitempty"`
	UnflushedSegments    []*SegmentInfo          `protobuf:"bytes,4,rep,name=unflushedSegments,proto3" json:"unflushedSegments,omitempty"`
	FlushedSegments      []*SegmentInfo          `protobuf:"bytes,5,rep,name=flushedSegments,proto3" json:"flushedSegments,omitempty"`
	DroppedSegments      []*SegmentInfo          `protobuf:"bytes,6,rep,name=dropped_segments,json=droppedSegments,proto3" json:"dropped_segments,omitempty"`
	UnflushedSegmentIds  []int64                 `protobuf:"varint,7,rep,packed,name=unflushedSegmentIds,proto3" json:"unflushedSegmentIds,omitempty"`
	FlushedSegmentIds    []int64                 `protobuf:"varint,8,rep,packed,name=flushedSegmentIds,proto3" json:"flushedSegmentIds,omitempty"`
	DroppedSegmentIds    []int64                 `protobuf:"varint,9,rep,packed,name=dropped_segmentIds,json=droppedSegmentIds,proto3" json:"dropped_segmentIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *VchannelInfo) Reset()         { *m = VchannelInfo{} }
func (m *VchannelInfo) String() string { return proto.CompactTextString(m) }
func (*VchannelInfo) ProtoMessage()    {}
func (*VchannelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{21}
}

func (m *VchannelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VchannelInfo.Unmarshal(m, b)
}
func (m *VchannelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VchannelInfo.Marshal(b, m, deterministic)
}
func (m *VchannelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VchannelInfo.Merge(m, src)
}
func (m *VchannelInfo) XXX_Size() int {
	return xxx_messageInfo_VchannelInfo.Size(m)
}
func (m *VchannelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VchannelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VchannelInfo proto.InternalMessageInfo

func (m *VchannelInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *VchannelInfo) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *VchannelInfo) GetSeekPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.SeekPosition
	}
	return nil
}

func (m *VchannelInfo) GetUnflushedSegments() []*SegmentInfo {
	if m != nil {
		return m.UnflushedSegments
	}
	return nil
}

func (m *VchannelInfo) GetFlushedSegments() []*SegmentInfo {
	if m != nil {
		return m.FlushedSegments
	}
	return nil
}

func (m *VchannelInfo) GetDroppedSegments() []*SegmentInfo {
	if m != nil {
		return m.DroppedSegments
	}
	return nil
}

func (m *VchannelInfo) GetUnflushedSegmentIds() []int64 {
	if m != nil {
		return m.UnflushedSegmentIds
	}
	return nil
}

func (m *VchannelInfo) GetFlushedSegmentIds() []int64 {
	if m != nil {
		return m.FlushedSegmentIds
	}
	return nil
}

func (m *VchannelInfo) GetDroppedSegmentIds() []int64 {
	if m != nil {
		return m.DroppedSegmentIds
	}
	return nil
}

type WatchDmChannelsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Vchannels            []*VchannelInfo   `protobuf:"bytes,2,rep,name=vchannels,proto3" json:"vchannels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WatchDmChannelsRequest) Reset()         { *m = WatchDmChannelsRequest{} }
func (m *WatchDmChannelsRequest) String() string { return proto.CompactTextString(m) }
func (*WatchDmChannelsRequest) ProtoMessage()    {}
func (*WatchDmChannelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{22}
}

func (m *WatchDmChannelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchDmChannelsRequest.Unmarshal(m, b)
}
func (m *WatchDmChannelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchDmChannelsRequest.Marshal(b, m, deterministic)
}
func (m *WatchDmChannelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchDmChannelsRequest.Merge(m, src)
}
func (m *WatchDmChannelsRequest) XXX_Size() int {
	return xxx_messageInfo_WatchDmChannelsRequest.Size(m)
}
func (m *WatchDmChannelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchDmChannelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchDmChannelsRequest proto.InternalMessageInfo

func (m *WatchDmChannelsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *WatchDmChannelsRequest) GetVchannels() []*VchannelInfo {
	if m != nil {
		return m.Vchannels
	}
	return nil
}

type FlushSegmentsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DbID                 int64             `protobuf:"varint,2,opt,name=dbID,proto3" json:"dbID,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	SegmentIDs           []int64           `protobuf:"varint,4,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	MarkSegmentIDs       []int64           `protobuf:"varint,5,rep,packed,name=markSegmentIDs,proto3" json:"markSegmentIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FlushSegmentsRequest) Reset()         { *m = FlushSegmentsRequest{} }
func (m *FlushSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*FlushSegmentsRequest) ProtoMessage()    {}
func (*FlushSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{23}
}

func (m *FlushSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushSegmentsRequest.Unmarshal(m, b)
}
func (m *FlushSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushSegmentsRequest.Marshal(b, m, deterministic)
}
func (m *FlushSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushSegmentsRequest.Merge(m, src)
}
func (m *FlushSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_FlushSegmentsRequest.Size(m)
}
func (m *FlushSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FlushSegmentsRequest proto.InternalMessageInfo

func (m *FlushSegmentsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *FlushSegmentsRequest) GetDbID() int64 {
	if m != nil {
		return m.DbID
	}
	return 0
}

func (m *FlushSegmentsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *FlushSegmentsRequest) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func (m *FlushSegmentsRequest) GetMarkSegmentIDs() []int64 {
	if m != nil {
		return m.MarkSegmentIDs
	}
	return nil
}

type SegmentMsg struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Segment              *SegmentInfo      `protobuf:"bytes,2,opt,name=segment,proto3" json:"segment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SegmentMsg) Reset()         { *m = SegmentMsg{} }
func (m *SegmentMsg) String() string { return proto.CompactTextString(m) }
func (*SegmentMsg) ProtoMessage()    {}
func (*SegmentMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{24}
}

func (m *SegmentMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentMsg.Unmarshal(m, b)
}
func (m *SegmentMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentMsg.Marshal(b, m, deterministic)
}
func (m *SegmentMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentMsg.Merge(m, src)
}
func (m *SegmentMsg) XXX_Size() int {
	return xxx_messageInfo_SegmentMsg.Size(m)
}
func (m *SegmentMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentMsg proto.InternalMessageInfo

func (m *SegmentMsg) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SegmentMsg) GetSegment() *SegmentInfo {
	if m != nil {
		return m.Segment
	}
	return nil
}

type CollectionInfo struct {
	ID                   int64                      `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Schema               *schemapb.CollectionSchema `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	Partitions           []int64                    `protobuf:"varint,3,rep,packed,name=partitions,proto3" json:"partitions,omitempty"`
	StartPositions       []*commonpb.KeyDataPair    `protobuf:"bytes,4,rep,name=start_positions,json=startPositions,proto3" json:"start_positions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CollectionInfo) Reset()         { *m = CollectionInfo{} }
func (m *CollectionInfo) String() string { return proto.CompactTextString(m) }
func (*CollectionInfo) ProtoMessage()    {}
func (*CollectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{25}
}

func (m *CollectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollectionInfo.Unmarshal(m, b)
}
func (m *CollectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollectionInfo.Marshal(b, m, deterministic)
}
func (m *CollectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionInfo.Merge(m, src)
}
func (m *CollectionInfo) XXX_Size() int {
	return xxx_messageInfo_CollectionInfo.Size(m)
}
func (m *CollectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionInfo proto.InternalMessageInfo

func (m *CollectionInfo) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *CollectionInfo) GetSchema() *schemapb.CollectionSchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *CollectionInfo) GetPartitions() []int64 {
	if m != nil {
		return m.Partitions
	}
	return nil
}

func (m *CollectionInfo) GetStartPositions() []*commonpb.KeyDataPair {
	if m != nil {
		return m.StartPositions
	}
	return nil
}

type SegmentInfo struct {
	ID             int64                   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CollectionID   int64                   `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID    int64                   `protobuf:"varint,3,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	InsertChannel  string                  `protobuf:"bytes,4,opt,name=insert_channel,json=insertChannel,proto3" json:"insert_channel,omitempty"`
	NumOfRows      int64                   `protobuf:"varint,5,opt,name=num_of_rows,json=numOfRows,proto3" json:"num_of_rows,omitempty"`
	State          commonpb.SegmentState   `protobuf:"varint,6,opt,name=state,proto3,enum=milvus.proto.common.SegmentState" json:"state,omitempty"`
	MaxRowNum      int64                   `protobuf:"varint,7,opt,name=max_row_num,json=maxRowNum,proto3" json:"max_row_num,omitempty"`
	LastExpireTime uint64                  `protobuf:"varint,8,opt,name=last_expire_time,json=lastExpireTime,proto3" json:"last_expire_time,omitempty"`
	StartPosition  *internalpb.MsgPosition `protobuf:"bytes,9,opt,name=start_position,json=startPosition,proto3" json:"start_position,omitempty"`
	DmlPosition    *internalpb.MsgPosition `protobuf:"bytes,10,opt,name=dml_position,json=dmlPosition,proto3" json:"dml_position,omitempty"`
	// binlogs consist of insert binlogs
	Binlogs   []*FieldBinlog `protobuf:"bytes,11,rep,name=binlogs,proto3" json:"binlogs,omitempty"`
	Statslogs []*FieldBinlog `protobuf:"bytes,12,rep,name=statslogs,proto3" json:"statslogs,omitempty"`
	// deltalogs consists of delete binlogs. FieldID is not used yet since delete is always applied on primary key
	Deltalogs            []*FieldBinlog `protobuf:"bytes,13,rep,name=deltalogs,proto3" json:"deltalogs,omitempty"`
	CreatedByCompaction  bool           `protobuf:"varint,14,opt,name=createdByCompaction,proto3" json:"createdByCompaction,omitempty"`
	CompactionFrom       []int64        `protobuf:"varint,15,rep,packed,name=compactionFrom,proto3" json:"compactionFrom,omitempty"`
	DroppedAt            uint64         `protobuf:"varint,16,opt,name=dropped_at,json=droppedAt,proto3" json:"dropped_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SegmentInfo) Reset()         { *m = SegmentInfo{} }
func (m *SegmentInfo) String() string { return proto.CompactTextString(m) }
func (*SegmentInfo) ProtoMessage()    {}
func (*SegmentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{26}
}

func (m *SegmentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentInfo.Unmarshal(m, b)
}
func (m *SegmentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentInfo.Marshal(b, m, deterministic)
}
func (m *SegmentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentInfo.Merge(m, src)
}
func (m *SegmentInfo) XXX_Size() int {
	return xxx_messageInfo_SegmentInfo.Size(m)
}
func (m *SegmentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentInfo proto.InternalMessageInfo

func (m *SegmentInfo) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SegmentInfo) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SegmentInfo) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *SegmentInfo) GetInsertChannel() string {
	if m != nil {
		return m.InsertChannel
	}
	return ""
}

func (m *SegmentInfo) GetNumOfRows() int64 {
	if m != nil {
		return m.NumOfRows
	}
	return 0
}

func (m *SegmentInfo) GetState() commonpb.SegmentState {
	if m != nil {
		return m.State
	}
	return commonpb.SegmentState_SegmentStateNone
}

func (m *SegmentInfo) GetMaxRowNum() int64 {
	if m != nil {
		return m.MaxRowNum
	}
	return 0
}

func (m *SegmentInfo) GetLastExpireTime() uint64 {
	if m != nil {
		return m.LastExpireTime
	}
	return 0
}

func (m *SegmentInfo) GetStartPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.StartPosition
	}
	return nil
}

func (m *SegmentInfo) GetDmlPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.DmlPosition
	}
	return nil
}

func (m *SegmentInfo) GetBinlogs() []*FieldBinlog {
	if m != nil {
		return m.Binlogs
	}
	return nil
}

func (m *SegmentInfo) GetStatslogs() []*FieldBinlog {
	if m != nil {
		return m.Statslogs
	}
	return nil
}

func (m *SegmentInfo) GetDeltalogs() []*FieldBinlog {
	if m != nil {
		return m.Deltalogs
	}
	return nil
}

func (m *SegmentInfo) GetCreatedByCompaction() bool {
	if m != nil {
		return m.CreatedByCompaction
	}
	return false
}

func (m *SegmentInfo) GetCompactionFrom() []int64 {
	if m != nil {
		return m.CompactionFrom
	}
	return nil
}

func (m *SegmentInfo) GetDroppedAt() uint64 {
	if m != nil {
		return m.DroppedAt
	}
	return 0
}

type SegmentStartPosition struct {
	StartPosition        *internalpb.MsgPosition `protobuf:"bytes,1,opt,name=start_position,json=startPosition,proto3" json:"start_position,omitempty"`
	SegmentID            int64                   `protobuf:"varint,2,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SegmentStartPosition) Reset()         { *m = SegmentStartPosition{} }
func (m *SegmentStartPosition) String() string { return proto.CompactTextString(m) }
func (*SegmentStartPosition) ProtoMessage()    {}
func (*SegmentStartPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{27}
}

func (m *SegmentStartPosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentStartPosition.Unmarshal(m, b)
}
func (m *SegmentStartPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentStartPosition.Marshal(b, m, deterministic)
}
func (m *SegmentStartPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentStartPosition.Merge(m, src)
}
func (m *SegmentStartPosition) XXX_Size() int {
	return xxx_messageInfo_SegmentStartPosition.Size(m)
}
func (m *SegmentStartPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentStartPosition.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentStartPosition proto.InternalMessageInfo

func (m *SegmentStartPosition) GetStartPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.StartPosition
	}
	return nil
}

func (m *SegmentStartPosition) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

type SaveBinlogPathsRequest struct {
	Base                 *commonpb.MsgBase       `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentID            int64                   `protobuf:"varint,2,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	CollectionID         int64                   `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	Field2BinlogPaths    []*FieldBinlog          `protobuf:"bytes,4,rep,name=field2BinlogPaths,proto3" json:"field2BinlogPaths,omitempty"`
	CheckPoints          []*CheckPoint           `protobuf:"bytes,5,rep,name=checkPoints,proto3" json:"checkPoints,omitempty"`
	StartPositions       []*SegmentStartPosition `protobuf:"bytes,6,rep,name=start_positions,json=startPositions,proto3" json:"start_positions,omitempty"`
	Flushed              bool                    `protobuf:"varint,7,opt,name=flushed,proto3" json:"flushed,omitempty"`
	Field2StatslogPaths  []*FieldBinlog          `protobuf:"bytes,8,rep,name=field2StatslogPaths,proto3" json:"field2StatslogPaths,omitempty"`
	Deltalogs            []*FieldBinlog          `protobuf:"bytes,9,rep,name=deltalogs,proto3" json:"deltalogs,omitempty"`
	Dropped              bool                    `protobuf:"varint,10,opt,name=dropped,proto3" json:"dropped,omitempty"`
	Importing            bool                    `protobuf:"varint,11,opt,name=importing,proto3" json:"importing,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SaveBinlogPathsRequest) Reset()         { *m = SaveBinlogPathsRequest{} }
func (m *SaveBinlogPathsRequest) String() string { return proto.CompactTextString(m) }
func (*SaveBinlogPathsRequest) ProtoMessage()    {}
func (*SaveBinlogPathsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{28}
}

func (m *SaveBinlogPathsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveBinlogPathsRequest.Unmarshal(m, b)
}
func (m *SaveBinlogPathsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveBinlogPathsRequest.Marshal(b, m, deterministic)
}
func (m *SaveBinlogPathsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveBinlogPathsRequest.Merge(m, src)
}
func (m *SaveBinlogPathsRequest) XXX_Size() int {
	return xxx_messageInfo_SaveBinlogPathsRequest.Size(m)
}
func (m *SaveBinlogPathsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveBinlogPathsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveBinlogPathsRequest proto.InternalMessageInfo

func (m *SaveBinlogPathsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SaveBinlogPathsRequest) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SaveBinlogPathsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *SaveBinlogPathsRequest) GetField2BinlogPaths() []*FieldBinlog {
	if m != nil {
		return m.Field2BinlogPaths
	}
	return nil
}

func (m *SaveBinlogPathsRequest) GetCheckPoints() []*CheckPoint {
	if m != nil {
		return m.CheckPoints
	}
	return nil
}

func (m *SaveBinlogPathsRequest) GetStartPositions() []*SegmentStartPosition {
	if m != nil {
		return m.StartPositions
	}
	return nil
}

func (m *SaveBinlogPathsRequest) GetFlushed() bool {
	if m != nil {
		return m.Flushed
	}
	return false
}

func (m *SaveBinlogPathsRequest) GetField2StatslogPaths() []*FieldBinlog {
	if m != nil {
		return m.Field2StatslogPaths
	}
	return nil
}

func (m *SaveBinlogPathsRequest) GetDeltalogs() []*FieldBinlog {
	if m != nil {
		return m.Deltalogs
	}
	return nil
}

func (m *SaveBinlogPathsRequest) GetDropped() bool {
	if m != nil {
		return m.Dropped
	}
	return false
}

func (m *SaveBinlogPathsRequest) GetImporting() bool {
	if m != nil {
		return m.Importing
	}
	return false
}

type CheckPoint struct {
	SegmentID            int64                   `protobuf:"varint,1,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	Position             *internalpb.MsgPosition `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	NumOfRows            int64                   `protobuf:"varint,3,opt,name=num_of_rows,json=numOfRows,proto3" json:"num_of_rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CheckPoint) Reset()         { *m = CheckPoint{} }
func (m *CheckPoint) String() string { return proto.CompactTextString(m) }
func (*CheckPoint) ProtoMessage()    {}
func (*CheckPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{29}
}

func (m *CheckPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckPoint.Unmarshal(m, b)
}
func (m *CheckPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckPoint.Marshal(b, m, deterministic)
}
func (m *CheckPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckPoint.Merge(m, src)
}
func (m *CheckPoint) XXX_Size() int {
	return xxx_messageInfo_CheckPoint.Size(m)
}
func (m *CheckPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckPoint.DiscardUnknown(m)
}

var xxx_messageInfo_CheckPoint proto.InternalMessageInfo

func (m *CheckPoint) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *CheckPoint) GetPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *CheckPoint) GetNumOfRows() int64 {
	if m != nil {
		return m.NumOfRows
	}
	return 0
}

type DeltaLogInfo struct {
	RecordEntries        uint64   `protobuf:"varint,1,opt,name=record_entries,json=recordEntries,proto3" json:"record_entries,omitempty"`
	TimestampFrom        uint64   `protobuf:"varint,2,opt,name=timestamp_from,json=timestampFrom,proto3" json:"timestamp_from,omitempty"`
	TimestampTo          uint64   `protobuf:"varint,3,opt,name=timestamp_to,json=timestampTo,proto3" json:"timestamp_to,omitempty"`
	DeltaLogPath         string   `protobuf:"bytes,4,opt,name=delta_log_path,json=deltaLogPath,proto3" json:"delta_log_path,omitempty"`
	DeltaLogSize         int64    `protobuf:"varint,5,opt,name=delta_log_size,json=deltaLogSize,proto3" json:"delta_log_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeltaLogInfo) Reset()         { *m = DeltaLogInfo{} }
func (m *DeltaLogInfo) String() string { return proto.CompactTextString(m) }
func (*DeltaLogInfo) ProtoMessage()    {}
func (*DeltaLogInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{30}
}

func (m *DeltaLogInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeltaLogInfo.Unmarshal(m, b)
}
func (m *DeltaLogInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeltaLogInfo.Marshal(b, m, deterministic)
}
func (m *DeltaLogInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeltaLogInfo.Merge(m, src)
}
func (m *DeltaLogInfo) XXX_Size() int {
	return xxx_messageInfo_DeltaLogInfo.Size(m)
}
func (m *DeltaLogInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DeltaLogInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DeltaLogInfo proto.InternalMessageInfo

func (m *DeltaLogInfo) GetRecordEntries() uint64 {
	if m != nil {
		return m.RecordEntries
	}
	return 0
}

func (m *DeltaLogInfo) GetTimestampFrom() uint64 {
	if m != nil {
		return m.TimestampFrom
	}
	return 0
}

func (m *DeltaLogInfo) GetTimestampTo() uint64 {
	if m != nil {
		return m.TimestampTo
	}
	return 0
}

func (m *DeltaLogInfo) GetDeltaLogPath() string {
	if m != nil {
		return m.DeltaLogPath
	}
	return ""
}

func (m *DeltaLogInfo) GetDeltaLogSize() int64 {
	if m != nil {
		return m.DeltaLogSize
	}
	return 0
}

type DataNodeTtMsg struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	ChannelName          string            `protobuf:"bytes,2,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	Timestamp            uint64            `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SegmentsStats        []*SegmentStats   `protobuf:"bytes,4,rep,name=segments_stats,json=segmentsStats,proto3" json:"segments_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DataNodeTtMsg) Reset()         { *m = DataNodeTtMsg{} }
func (m *DataNodeTtMsg) String() string { return proto.CompactTextString(m) }
func (*DataNodeTtMsg) ProtoMessage()    {}
func (*DataNodeTtMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{31}
}

func (m *DataNodeTtMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataNodeTtMsg.Unmarshal(m, b)
}
func (m *DataNodeTtMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataNodeTtMsg.Marshal(b, m, deterministic)
}
func (m *DataNodeTtMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataNodeTtMsg.Merge(m, src)
}
func (m *DataNodeTtMsg) XXX_Size() int {
	return xxx_messageInfo_DataNodeTtMsg.Size(m)
}
func (m *DataNodeTtMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_DataNodeTtMsg.DiscardUnknown(m)
}

var xxx_messageInfo_DataNodeTtMsg proto.InternalMessageInfo

func (m *DataNodeTtMsg) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *DataNodeTtMsg) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *DataNodeTtMsg) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *DataNodeTtMsg) GetSegmentsStats() []*SegmentStats {
	if m != nil {
		return m.SegmentsStats
	}
	return nil
}

type SegmentStats struct {
	SegmentID            int64    `protobuf:"varint,1,opt,name=SegmentID,proto3" json:"SegmentID,omitempty"`
	NumRows              int64    `protobuf:"varint,2,opt,name=NumRows,proto3" json:"NumRows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentStats) Reset()         { *m = SegmentStats{} }
func (m *SegmentStats) String() string { return proto.CompactTextString(m) }
func (*SegmentStats) ProtoMessage()    {}
func (*SegmentStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{32}
}

func (m *SegmentStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentStats.Unmarshal(m, b)
}
func (m *SegmentStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentStats.Marshal(b, m, deterministic)
}
func (m *SegmentStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentStats.Merge(m, src)
}
func (m *SegmentStats) XXX_Size() int {
	return xxx_messageInfo_SegmentStats.Size(m)
}
func (m *SegmentStats) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentStats.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentStats proto.InternalMessageInfo

func (m *SegmentStats) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SegmentStats) GetNumRows() int64 {
	if m != nil {
		return m.NumRows
	}
	return 0
}

type ChannelStatus struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State                ChannelWatchState `protobuf:"varint,2,opt,name=state,proto3,enum=milvus.proto.data.ChannelWatchState" json:"state,omitempty"`
	CollectionID         int64             `protobuf:"varint,3,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ChannelStatus) Reset()         { *m = ChannelStatus{} }
func (m *ChannelStatus) String() string { return proto.CompactTextString(m) }
func (*ChannelStatus) ProtoMessage()    {}
func (*ChannelStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{33}
}

func (m *ChannelStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelStatus.Unmarshal(m, b)
}
func (m *ChannelStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelStatus.Marshal(b, m, deterministic)
}
func (m *ChannelStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelStatus.Merge(m, src)
}
func (m *ChannelStatus) XXX_Size() int {
	return xxx_messageInfo_ChannelStatus.Size(m)
}
func (m *ChannelStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelStatus proto.InternalMessageInfo

func (m *ChannelStatus) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ChannelStatus) GetState() ChannelWatchState {
	if m != nil {
		return m.State
	}
	return ChannelWatchState_Uncomplete
}

func (m *ChannelStatus) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

type DataNodeInfo struct {
	Address              string           `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Version              int64            `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Channels             []*ChannelStatus `protobuf:"bytes,3,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DataNodeInfo) Reset()         { *m = DataNodeInfo{} }
func (m *DataNodeInfo) String() string { return proto.CompactTextString(m) }
func (*DataNodeInfo) ProtoMessage()    {}
func (*DataNodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{34}
}

func (m *DataNodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataNodeInfo.Unmarshal(m, b)
}
func (m *DataNodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataNodeInfo.Marshal(b, m, deterministic)
}
func (m *DataNodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataNodeInfo.Merge(m, src)
}
func (m *DataNodeInfo) XXX_Size() int {
	return xxx_messageInfo_DataNodeInfo.Size(m)
}
func (m *DataNodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DataNodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DataNodeInfo proto.InternalMessageInfo

func (m *DataNodeInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *DataNodeInfo) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *DataNodeInfo) GetChannels() []*ChannelStatus {
	if m != nil {
		return m.Channels
	}
	return nil
}

type SegmentBinlogs struct {
	SegmentID            int64          `protobuf:"varint,1,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	FieldBinlogs         []*FieldBinlog `protobuf:"bytes,2,rep,name=fieldBinlogs,proto3" json:"fieldBinlogs,omitempty"`
	NumOfRows            int64          `protobuf:"varint,3,opt,name=num_of_rows,json=numOfRows,proto3" json:"num_of_rows,omitempty"`
	Statslogs            []*FieldBinlog `protobuf:"bytes,4,rep,name=statslogs,proto3" json:"statslogs,omitempty"`
	Deltalogs            []*FieldBinlog `protobuf:"bytes,5,rep,name=deltalogs,proto3" json:"deltalogs,omitempty"`
	InsertChannel        string         `protobuf:"bytes,6,opt,name=insert_channel,json=insertChannel,proto3" json:"insert_channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SegmentBinlogs) Reset()         { *m = SegmentBinlogs{} }
func (m *SegmentBinlogs) String() string { return proto.CompactTextString(m) }
func (*SegmentBinlogs) ProtoMessage()    {}
func (*SegmentBinlogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{35}
}

func (m *SegmentBinlogs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentBinlogs.Unmarshal(m, b)
}
func (m *SegmentBinlogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentBinlogs.Marshal(b, m, deterministic)
}
func (m *SegmentBinlogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentBinlogs.Merge(m, src)
}
func (m *SegmentBinlogs) XXX_Size() int {
	return xxx_messageInfo_SegmentBinlogs.Size(m)
}
func (m *SegmentBinlogs) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentBinlogs.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentBinlogs proto.InternalMessageInfo

func (m *SegmentBinlogs) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *SegmentBinlogs) GetFieldBinlogs() []*FieldBinlog {
	if m != nil {
		return m.FieldBinlogs
	}
	return nil
}

func (m *SegmentBinlogs) GetNumOfRows() int64 {
	if m != nil {
		return m.NumOfRows
	}
	return 0
}

func (m *SegmentBinlogs) GetStatslogs() []*FieldBinlog {
	if m != nil {
		return m.Statslogs
	}
	return nil
}

func (m *SegmentBinlogs) GetDeltalogs() []*FieldBinlog {
	if m != nil {
		return m.Deltalogs
	}
	return nil
}

func (m *SegmentBinlogs) GetInsertChannel() string {
	if m != nil {
		return m.InsertChannel
	}
	return ""
}

type FieldBinlog struct {
	FieldID              int64     `protobuf:"varint,1,opt,name=fieldID,proto3" json:"fieldID,omitempty"`
	Binlogs              []*Binlog `protobuf:"bytes,2,rep,name=binlogs,proto3" json:"binlogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FieldBinlog) Reset()         { *m = FieldBinlog{} }
func (m *FieldBinlog) String() string { return proto.CompactTextString(m) }
func (*FieldBinlog) ProtoMessage()    {}
func (*FieldBinlog) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{36}
}

func (m *FieldBinlog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldBinlog.Unmarshal(m, b)
}
func (m *FieldBinlog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldBinlog.Marshal(b, m, deterministic)
}
func (m *FieldBinlog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldBinlog.Merge(m, src)
}
func (m *FieldBinlog) XXX_Size() int {
	return xxx_messageInfo_FieldBinlog.Size(m)
}
func (m *FieldBinlog) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldBinlog.DiscardUnknown(m)
}

var xxx_messageInfo_FieldBinlog proto.InternalMessageInfo

func (m *FieldBinlog) GetFieldID() int64 {
	if m != nil {
		return m.FieldID
	}
	return 0
}

func (m *FieldBinlog) GetBinlogs() []*Binlog {
	if m != nil {
		return m.Binlogs
	}
	return nil
}

type Binlog struct {
	EntriesNum           int64    `protobuf:"varint,1,opt,name=entries_num,json=entriesNum,proto3" json:"entries_num,omitempty"`
	TimestampFrom        uint64   `protobuf:"varint,2,opt,name=timestamp_from,json=timestampFrom,proto3" json:"timestamp_from,omitempty"`
	TimestampTo          uint64   `protobuf:"varint,3,opt,name=timestamp_to,json=timestampTo,proto3" json:"timestamp_to,omitempty"`
	LogPath              string   `protobuf:"bytes,4,opt,name=log_path,json=logPath,proto3" json:"log_path,omitempty"`
	LogSize              int64    `protobuf:"varint,5,opt,name=log_size,json=logSize,proto3" json:"log_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Binlog) Reset()         { *m = Binlog{} }
func (m *Binlog) String() string { return proto.CompactTextString(m) }
func (*Binlog) ProtoMessage()    {}
func (*Binlog) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{37}
}

func (m *Binlog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Binlog.Unmarshal(m, b)
}
func (m *Binlog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Binlog.Marshal(b, m, deterministic)
}
func (m *Binlog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Binlog.Merge(m, src)
}
func (m *Binlog) XXX_Size() int {
	return xxx_messageInfo_Binlog.Size(m)
}
func (m *Binlog) XXX_DiscardUnknown() {
	xxx_messageInfo_Binlog.DiscardUnknown(m)
}

var xxx_messageInfo_Binlog proto.InternalMessageInfo

func (m *Binlog) GetEntriesNum() int64 {
	if m != nil {
		return m.EntriesNum
	}
	return 0
}

func (m *Binlog) GetTimestampFrom() uint64 {
	if m != nil {
		return m.TimestampFrom
	}
	return 0
}

func (m *Binlog) GetTimestampTo() uint64 {
	if m != nil {
		return m.TimestampTo
	}
	return 0
}

func (m *Binlog) GetLogPath() string {
	if m != nil {
		return m.LogPath
	}
	return ""
}

func (m *Binlog) GetLogSize() int64 {
	if m != nil {
		return m.LogSize
	}
	return 0
}

type GetRecoveryInfoResponse struct {
	Status               *commonpb.Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Channels             []*VchannelInfo   `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"`
	Binlogs              []*SegmentBinlogs `protobuf:"bytes,3,rep,name=binlogs,proto3" json:"binlogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetRecoveryInfoResponse) Reset()         { *m = GetRecoveryInfoResponse{} }
func (m *GetRecoveryInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetRecoveryInfoResponse) ProtoMessage()    {}
func (*GetRecoveryInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{38}
}

func (m *GetRecoveryInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecoveryInfoResponse.Unmarshal(m, b)
}
func (m *GetRecoveryInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecoveryInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetRecoveryInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecoveryInfoResponse.Merge(m, src)
}
func (m *GetRecoveryInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetRecoveryInfoResponse.Size(m)
}
func (m *GetRecoveryInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecoveryInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecoveryInfoResponse proto.InternalMessageInfo

func (m *GetRecoveryInfoResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetRecoveryInfoResponse) GetChannels() []*VchannelInfo {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *GetRecoveryInfoResponse) GetBinlogs() []*SegmentBinlogs {
	if m != nil {
		return m.Binlogs
	}
	return nil
}

type GetRecoveryInfoRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CollectionID         int64             `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID          int64             `protobuf:"varint,3,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetRecoveryInfoRequest) Reset()         { *m = GetRecoveryInfoRequest{} }
func (m *GetRecoveryInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecoveryInfoRequest) ProtoMessage()    {}
func (*GetRecoveryInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{39}
}

func (m *GetRecoveryInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecoveryInfoRequest.Unmarshal(m, b)
}
func (m *GetRecoveryInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecoveryInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetRecoveryInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecoveryInfoRequest.Merge(m, src)
}
func (m *GetRecoveryInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetRecoveryInfoRequest.Size(m)
}
func (m *GetRecoveryInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecoveryInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecoveryInfoRequest proto.InternalMessageInfo

func (m *GetRecoveryInfoRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetRecoveryInfoRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *GetRecoveryInfoRequest) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

type GetFlushedSegmentsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	CollectionID         int64             `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	PartitionID          int64             `protobuf:"varint,3,opt,name=partitionID,proto3" json:"partitionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetFlushedSegmentsRequest) Reset()         { *m = GetFlushedSegmentsRequest{} }
func (m *GetFlushedSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*GetFlushedSegmentsRequest) ProtoMessage()    {}
func (*GetFlushedSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{40}
}

func (m *GetFlushedSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlushedSegmentsRequest.Unmarshal(m, b)
}
func (m *GetFlushedSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlushedSegmentsRequest.Marshal(b, m, deterministic)
}
func (m *GetFlushedSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlushedSegmentsRequest.Merge(m, src)
}
func (m *GetFlushedSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_GetFlushedSegmentsRequest.Size(m)
}
func (m *GetFlushedSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlushedSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlushedSegmentsRequest proto.InternalMessageInfo

func (m *GetFlushedSegmentsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *GetFlushedSegmentsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *GetFlushedSegmentsRequest) GetPartitionID() int64 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

type GetFlushedSegmentsResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Segments             []int64          `protobuf:"varint,2,rep,packed,name=segments,proto3" json:"segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetFlushedSegmentsResponse) Reset()         { *m = GetFlushedSegmentsResponse{} }
func (m *GetFlushedSegmentsResponse) String() string { return proto.CompactTextString(m) }
func (*GetFlushedSegmentsResponse) ProtoMessage()    {}
func (*GetFlushedSegmentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{41}
}

func (m *GetFlushedSegmentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlushedSegmentsResponse.Unmarshal(m, b)
}
func (m *GetFlushedSegmentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlushedSegmentsResponse.Marshal(b, m, deterministic)
}
func (m *GetFlushedSegmentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlushedSegmentsResponse.Merge(m, src)
}
func (m *GetFlushedSegmentsResponse) XXX_Size() int {
	return xxx_messageInfo_GetFlushedSegmentsResponse.Size(m)
}
func (m *GetFlushedSegmentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlushedSegmentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlushedSegmentsResponse proto.InternalMessageInfo

func (m *GetFlushedSegmentsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetFlushedSegmentsResponse) GetSegments() []int64 {
	if m != nil {
		return m.Segments
	}
	return nil
}

type SegmentFlushCompletedMsg struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Segment              *SegmentInfo      `protobuf:"bytes,2,opt,name=segment,proto3" json:"segment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SegmentFlushCompletedMsg) Reset()         { *m = SegmentFlushCompletedMsg{} }
func (m *SegmentFlushCompletedMsg) String() string { return proto.CompactTextString(m) }
func (*SegmentFlushCompletedMsg) ProtoMessage()    {}
func (*SegmentFlushCompletedMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{42}
}

func (m *SegmentFlushCompletedMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentFlushCompletedMsg.Unmarshal(m, b)
}
func (m *SegmentFlushCompletedMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentFlushCompletedMsg.Marshal(b, m, deterministic)
}
func (m *SegmentFlushCompletedMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentFlushCompletedMsg.Merge(m, src)
}
func (m *SegmentFlushCompletedMsg) XXX_Size() int {
	return xxx_messageInfo_SegmentFlushCompletedMsg.Size(m)
}
func (m *SegmentFlushCompletedMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentFlushCompletedMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentFlushCompletedMsg proto.InternalMessageInfo

func (m *SegmentFlushCompletedMsg) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SegmentFlushCompletedMsg) GetSegment() *SegmentInfo {
	if m != nil {
		return m.Segment
	}
	return nil
}

type ChannelWatchInfo struct {
	Vchan   *VchannelInfo     `protobuf:"bytes,1,opt,name=vchan,proto3" json:"vchan,omitempty"`
	StartTs int64             `protobuf:"varint,2,opt,name=startTs,proto3" json:"startTs,omitempty"`
	State   ChannelWatchState `protobuf:"varint,3,opt,name=state,proto3,enum=milvus.proto.data.ChannelWatchState" json:"state,omitempty"`
	// the timeout ts, datanode shall do nothing after it
	// if the timeout is not set(= 0), original infinite retry logic shall be applied
	TimeoutTs            int64    `protobuf:"varint,4,opt,name=timeoutTs,proto3" json:"timeoutTs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelWatchInfo) Reset()         { *m = ChannelWatchInfo{} }
func (m *ChannelWatchInfo) String() string { return proto.CompactTextString(m) }
func (*ChannelWatchInfo) ProtoMessage()    {}
func (*ChannelWatchInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{43}
}

func (m *ChannelWatchInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelWatchInfo.Unmarshal(m, b)
}
func (m *ChannelWatchInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelWatchInfo.Marshal(b, m, deterministic)
}
func (m *ChannelWatchInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelWatchInfo.Merge(m, src)
}
func (m *ChannelWatchInfo) XXX_Size() int {
	return xxx_messageInfo_ChannelWatchInfo.Size(m)
}
func (m *ChannelWatchInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelWatchInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelWatchInfo proto.InternalMessageInfo

func (m *ChannelWatchInfo) GetVchan() *VchannelInfo {
	if m != nil {
		return m.Vchan
	}
	return nil
}

func (m *ChannelWatchInfo) GetStartTs() int64 {
	if m != nil {
		return m.StartTs
	}
	return 0
}

func (m *ChannelWatchInfo) GetState() ChannelWatchState {
	if m != nil {
		return m.State
	}
	return ChannelWatchState_Uncomplete
}

func (m *ChannelWatchInfo) GetTimeoutTs() int64 {
	if m != nil {
		return m.TimeoutTs
	}
	return 0
}

type CompactionStateRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CompactionStateRequest) Reset()         { *m = CompactionStateRequest{} }
func (m *CompactionStateRequest) String() string { return proto.CompactTextString(m) }
func (*CompactionStateRequest) ProtoMessage()    {}
func (*CompactionStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{44}
}

func (m *CompactionStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompactionStateRequest.Unmarshal(m, b)
}
func (m *CompactionStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompactionStateRequest.Marshal(b, m, deterministic)
}
func (m *CompactionStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompactionStateRequest.Merge(m, src)
}
func (m *CompactionStateRequest) XXX_Size() int {
	return xxx_messageInfo_CompactionStateRequest.Size(m)
}
func (m *CompactionStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompactionStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompactionStateRequest proto.InternalMessageInfo

func (m *CompactionStateRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type CompactionSegmentBinlogs struct {
	SegmentID            int64          `protobuf:"varint,1,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	FieldBinlogs         []*FieldBinlog `protobuf:"bytes,2,rep,name=fieldBinlogs,proto3" json:"fieldBinlogs,omitempty"`
	Field2StatslogPaths  []*FieldBinlog `protobuf:"bytes,3,rep,name=field2StatslogPaths,proto3" json:"field2StatslogPaths,omitempty"`
	Deltalogs            []*FieldBinlog `protobuf:"bytes,4,rep,name=deltalogs,proto3" json:"deltalogs,omitempty"`
	InsertChannel        string         `protobuf:"bytes,5,opt,name=insert_channel,json=insertChannel,proto3" json:"insert_channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CompactionSegmentBinlogs) Reset()         { *m = CompactionSegmentBinlogs{} }
func (m *CompactionSegmentBinlogs) String() string { return proto.CompactTextString(m) }
func (*CompactionSegmentBinlogs) ProtoMessage()    {}
func (*CompactionSegmentBinlogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{45}
}

func (m *CompactionSegmentBinlogs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompactionSegmentBinlogs.Unmarshal(m, b)
}
func (m *CompactionSegmentBinlogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompactionSegmentBinlogs.Marshal(b, m, deterministic)
}
func (m *CompactionSegmentBinlogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompactionSegmentBinlogs.Merge(m, src)
}
func (m *CompactionSegmentBinlogs) XXX_Size() int {
	return xxx_messageInfo_CompactionSegmentBinlogs.Size(m)
}
func (m *CompactionSegmentBinlogs) XXX_DiscardUnknown() {
	xxx_messageInfo_CompactionSegmentBinlogs.DiscardUnknown(m)
}

var xxx_messageInfo_CompactionSegmentBinlogs proto.InternalMessageInfo

func (m *CompactionSegmentBinlogs) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *CompactionSegmentBinlogs) GetFieldBinlogs() []*FieldBinlog {
	if m != nil {
		return m.FieldBinlogs
	}
	return nil
}

func (m *CompactionSegmentBinlogs) GetField2StatslogPaths() []*FieldBinlog {
	if m != nil {
		return m.Field2StatslogPaths
	}
	return nil
}

func (m *CompactionSegmentBinlogs) GetDeltalogs() []*FieldBinlog {
	if m != nil {
		return m.Deltalogs
	}
	return nil
}

func (m *CompactionSegmentBinlogs) GetInsertChannel() string {
	if m != nil {
		return m.InsertChannel
	}
	return ""
}

type CompactionPlan struct {
	PlanID               int64                       `protobuf:"varint,1,opt,name=planID,proto3" json:"planID,omitempty"`
	SegmentBinlogs       []*CompactionSegmentBinlogs `protobuf:"bytes,2,rep,name=segmentBinlogs,proto3" json:"segmentBinlogs,omitempty"`
	StartTime            uint64                      `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	TimeoutInSeconds     int32                       `protobuf:"varint,4,opt,name=timeout_in_seconds,json=timeoutInSeconds,proto3" json:"timeout_in_seconds,omitempty"`
	Type                 CompactionType              `protobuf:"varint,5,opt,name=type,proto3,enum=milvus.proto.data.CompactionType" json:"type,omitempty"`
	Timetravel           uint64                      `protobuf:"varint,6,opt,name=timetravel,proto3" json:"timetravel,omitempty"`
	Channel              string                      `protobuf:"bytes,7,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CompactionPlan) Reset()         { *m = CompactionPlan{} }
func (m *CompactionPlan) String() string { return proto.CompactTextString(m) }
func (*CompactionPlan) ProtoMessage()    {}
func (*CompactionPlan) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{46}
}

func (m *CompactionPlan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompactionPlan.Unmarshal(m, b)
}
func (m *CompactionPlan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompactionPlan.Marshal(b, m, deterministic)
}
func (m *CompactionPlan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompactionPlan.Merge(m, src)
}
func (m *CompactionPlan) XXX_Size() int {
	return xxx_messageInfo_CompactionPlan.Size(m)
}
func (m *CompactionPlan) XXX_DiscardUnknown() {
	xxx_messageInfo_CompactionPlan.DiscardUnknown(m)
}

var xxx_messageInfo_CompactionPlan proto.InternalMessageInfo

func (m *CompactionPlan) GetPlanID() int64 {
	if m != nil {
		return m.PlanID
	}
	return 0
}

func (m *CompactionPlan) GetSegmentBinlogs() []*CompactionSegmentBinlogs {
	if m != nil {
		return m.SegmentBinlogs
	}
	return nil
}

func (m *CompactionPlan) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *CompactionPlan) GetTimeoutInSeconds() int32 {
	if m != nil {
		return m.TimeoutInSeconds
	}
	return 0
}

func (m *CompactionPlan) GetType() CompactionType {
	if m != nil {
		return m.Type
	}
	return CompactionType_UndefinedCompaction
}

func (m *CompactionPlan) GetTimetravel() uint64 {
	if m != nil {
		return m.Timetravel
	}
	return 0
}

func (m *CompactionPlan) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

type CompactionResult struct {
	PlanID               int64          `protobuf:"varint,1,opt,name=planID,proto3" json:"planID,omitempty"`
	SegmentID            int64          `protobuf:"varint,2,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	NumOfRows            int64          `protobuf:"varint,3,opt,name=num_of_rows,json=numOfRows,proto3" json:"num_of_rows,omitempty"`
	InsertLogs           []*FieldBinlog `protobuf:"bytes,4,rep,name=insert_logs,json=insertLogs,proto3" json:"insert_logs,omitempty"`
	Field2StatslogPaths  []*FieldBinlog `protobuf:"bytes,5,rep,name=field2StatslogPaths,proto3" json:"field2StatslogPaths,omitempty"`
	Deltalogs            []*FieldBinlog `protobuf:"bytes,6,rep,name=deltalogs,proto3" json:"deltalogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CompactionResult) Reset()         { *m = CompactionResult{} }
func (m *CompactionResult) String() string { return proto.CompactTextString(m) }
func (*CompactionResult) ProtoMessage()    {}
func (*CompactionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{47}
}

func (m *CompactionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompactionResult.Unmarshal(m, b)
}
func (m *CompactionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompactionResult.Marshal(b, m, deterministic)
}
func (m *CompactionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompactionResult.Merge(m, src)
}
func (m *CompactionResult) XXX_Size() int {
	return xxx_messageInfo_CompactionResult.Size(m)
}
func (m *CompactionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CompactionResult.DiscardUnknown(m)
}

var xxx_messageInfo_CompactionResult proto.InternalMessageInfo

func (m *CompactionResult) GetPlanID() int64 {
	if m != nil {
		return m.PlanID
	}
	return 0
}

func (m *CompactionResult) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *CompactionResult) GetNumOfRows() int64 {
	if m != nil {
		return m.NumOfRows
	}
	return 0
}

func (m *CompactionResult) GetInsertLogs() []*FieldBinlog {
	if m != nil {
		return m.InsertLogs
	}
	return nil
}

func (m *CompactionResult) GetField2StatslogPaths() []*FieldBinlog {
	if m != nil {
		return m.Field2StatslogPaths
	}
	return nil
}

func (m *CompactionResult) GetDeltalogs() []*FieldBinlog {
	if m != nil {
		return m.Deltalogs
	}
	return nil
}

type CompactionStateResult struct {
	PlanID               int64                    `protobuf:"varint,1,opt,name=planID,proto3" json:"planID,omitempty"`
	State                commonpb.CompactionState `protobuf:"varint,2,opt,name=state,proto3,enum=milvus.proto.common.CompactionState" json:"state,omitempty"`
	Result               *CompactionResult        `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CompactionStateResult) Reset()         { *m = CompactionStateResult{} }
func (m *CompactionStateResult) String() string { return proto.CompactTextString(m) }
func (*CompactionStateResult) ProtoMessage()    {}
func (*CompactionStateResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{48}
}

func (m *CompactionStateResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompactionStateResult.Unmarshal(m, b)
}
func (m *CompactionStateResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompactionStateResult.Marshal(b, m, deterministic)
}
func (m *CompactionStateResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompactionStateResult.Merge(m, src)
}
func (m *CompactionStateResult) XXX_Size() int {
	return xxx_messageInfo_CompactionStateResult.Size(m)
}
func (m *CompactionStateResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CompactionStateResult.DiscardUnknown(m)
}

var xxx_messageInfo_CompactionStateResult proto.InternalMessageInfo

func (m *CompactionStateResult) GetPlanID() int64 {
	if m != nil {
		return m.PlanID
	}
	return 0
}

func (m *CompactionStateResult) GetState() commonpb.CompactionState {
	if m != nil {
		return m.State
	}
	return commonpb.CompactionState_UndefiedState
}

func (m *CompactionStateResult) GetResult() *CompactionResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type CompactionStateResponse struct {
	Status               *commonpb.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Results              []*CompactionStateResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CompactionStateResponse) Reset()         { *m = CompactionStateResponse{} }
func (m *CompactionStateResponse) String() string { return proto.CompactTextString(m) }
func (*CompactionStateResponse) ProtoMessage()    {}
func (*CompactionStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{49}
}

func (m *CompactionStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompactionStateResponse.Unmarshal(m, b)
}
func (m *CompactionStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompactionStateResponse.Marshal(b, m, deterministic)
}
func (m *CompactionStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompactionStateResponse.Merge(m, src)
}
func (m *CompactionStateResponse) XXX_Size() int {
	return xxx_messageInfo_CompactionStateResponse.Size(m)
}
func (m *CompactionStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CompactionStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CompactionStateResponse proto.InternalMessageInfo

func (m *CompactionStateResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CompactionStateResponse) GetResults() []*CompactionStateResult {
	if m != nil {
		return m.Results
	}
	return nil
}

// Deprecated
type SegmentFieldBinlogMeta struct {
	FieldID              int64    `protobuf:"varint,1,opt,name=fieldID,proto3" json:"fieldID,omitempty"`
	BinlogPath           string   `protobuf:"bytes,2,opt,name=binlog_path,json=binlogPath,proto3" json:"binlog_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentFieldBinlogMeta) Reset()         { *m = SegmentFieldBinlogMeta{} }
func (m *SegmentFieldBinlogMeta) String() string { return proto.CompactTextString(m) }
func (*SegmentFieldBinlogMeta) ProtoMessage()    {}
func (*SegmentFieldBinlogMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{50}
}

func (m *SegmentFieldBinlogMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentFieldBinlogMeta.Unmarshal(m, b)
}
func (m *SegmentFieldBinlogMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentFieldBinlogMeta.Marshal(b, m, deterministic)
}
func (m *SegmentFieldBinlogMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentFieldBinlogMeta.Merge(m, src)
}
func (m *SegmentFieldBinlogMeta) XXX_Size() int {
	return xxx_messageInfo_SegmentFieldBinlogMeta.Size(m)
}
func (m *SegmentFieldBinlogMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentFieldBinlogMeta.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentFieldBinlogMeta proto.InternalMessageInfo

func (m *SegmentFieldBinlogMeta) GetFieldID() int64 {
	if m != nil {
		return m.FieldID
	}
	return 0
}

func (m *SegmentFieldBinlogMeta) GetBinlogPath() string {
	if m != nil {
		return m.BinlogPath
	}
	return ""
}

type WatchChannelsRequest struct {
	CollectionID         int64                   `protobuf:"varint,1,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	ChannelNames         []string                `protobuf:"bytes,2,rep,name=channelNames,proto3" json:"channelNames,omitempty"`
	StartPositions       []*commonpb.KeyDataPair `protobuf:"bytes,3,rep,name=start_positions,json=startPositions,proto3" json:"start_positions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *WatchChannelsRequest) Reset()         { *m = WatchChannelsRequest{} }
func (m *WatchChannelsRequest) String() string { return proto.CompactTextString(m) }
func (*WatchChannelsRequest) ProtoMessage()    {}
func (*WatchChannelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{51}
}

func (m *WatchChannelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchChannelsRequest.Unmarshal(m, b)
}
func (m *WatchChannelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchChannelsRequest.Marshal(b, m, deterministic)
}
func (m *WatchChannelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchChannelsRequest.Merge(m, src)
}
func (m *WatchChannelsRequest) XXX_Size() int {
	return xxx_messageInfo_WatchChannelsRequest.Size(m)
}
func (m *WatchChannelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchChannelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchChannelsRequest proto.InternalMessageInfo

func (m *WatchChannelsRequest) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *WatchChannelsRequest) GetChannelNames() []string {
	if m != nil {
		return m.ChannelNames
	}
	return nil
}

func (m *WatchChannelsRequest) GetStartPositions() []*commonpb.KeyDataPair {
	if m != nil {
		return m.StartPositions
	}
	return nil
}

type WatchChannelsResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *WatchChannelsResponse) Reset()         { *m = WatchChannelsResponse{} }
func (m *WatchChannelsResponse) String() string { return proto.CompactTextString(m) }
func (*WatchChannelsResponse) ProtoMessage()    {}
func (*WatchChannelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{52}
}

func (m *WatchChannelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchChannelsResponse.Unmarshal(m, b)
}
func (m *WatchChannelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchChannelsResponse.Marshal(b, m, deterministic)
}
func (m *WatchChannelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchChannelsResponse.Merge(m, src)
}
func (m *WatchChannelsResponse) XXX_Size() int {
	return xxx_messageInfo_WatchChannelsResponse.Size(m)
}
func (m *WatchChannelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchChannelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchChannelsResponse proto.InternalMessageInfo

func (m *WatchChannelsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type SetSegmentStateRequest struct {
	Base                 *commonpb.MsgBase     `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentId            int64                 `protobuf:"varint,2,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	NewState             commonpb.SegmentState `protobuf:"varint,3,opt,name=new_state,json=newState,proto3,enum=milvus.proto.common.SegmentState" json:"new_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SetSegmentStateRequest) Reset()         { *m = SetSegmentStateRequest{} }
func (m *SetSegmentStateRequest) String() string { return proto.CompactTextString(m) }
func (*SetSegmentStateRequest) ProtoMessage()    {}
func (*SetSegmentStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{53}
}

func (m *SetSegmentStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetSegmentStateRequest.Unmarshal(m, b)
}
func (m *SetSegmentStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetSegmentStateRequest.Marshal(b, m, deterministic)
}
func (m *SetSegmentStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSegmentStateRequest.Merge(m, src)
}
func (m *SetSegmentStateRequest) XXX_Size() int {
	return xxx_messageInfo_SetSegmentStateRequest.Size(m)
}
func (m *SetSegmentStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSegmentStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetSegmentStateRequest proto.InternalMessageInfo

func (m *SetSegmentStateRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *SetSegmentStateRequest) GetSegmentId() int64 {
	if m != nil {
		return m.SegmentId
	}
	return 0
}

func (m *SetSegmentStateRequest) GetNewState() commonpb.SegmentState {
	if m != nil {
		return m.NewState
	}
	return commonpb.SegmentState_SegmentStateNone
}

type SetSegmentStateResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SetSegmentStateResponse) Reset()         { *m = SetSegmentStateResponse{} }
func (m *SetSegmentStateResponse) String() string { return proto.CompactTextString(m) }
func (*SetSegmentStateResponse) ProtoMessage()    {}
func (*SetSegmentStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{54}
}

func (m *SetSegmentStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetSegmentStateResponse.Unmarshal(m, b)
}
func (m *SetSegmentStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetSegmentStateResponse.Marshal(b, m, deterministic)
}
func (m *SetSegmentStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSegmentStateResponse.Merge(m, src)
}
func (m *SetSegmentStateResponse) XXX_Size() int {
	return xxx_messageInfo_SetSegmentStateResponse.Size(m)
}
func (m *SetSegmentStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSegmentStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetSegmentStateResponse proto.InternalMessageInfo

func (m *SetSegmentStateResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type DropVirtualChannelRequest struct {
	Base                 *commonpb.MsgBase            `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	ChannelName          string                       `protobuf:"bytes,2,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	Segments             []*DropVirtualChannelSegment `protobuf:"bytes,3,rep,name=segments,proto3" json:"segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DropVirtualChannelRequest) Reset()         { *m = DropVirtualChannelRequest{} }
func (m *DropVirtualChannelRequest) String() string { return proto.CompactTextString(m) }
func (*DropVirtualChannelRequest) ProtoMessage()    {}
func (*DropVirtualChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{55}
}

func (m *DropVirtualChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropVirtualChannelRequest.Unmarshal(m, b)
}
func (m *DropVirtualChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropVirtualChannelRequest.Marshal(b, m, deterministic)
}
func (m *DropVirtualChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropVirtualChannelRequest.Merge(m, src)
}
func (m *DropVirtualChannelRequest) XXX_Size() int {
	return xxx_messageInfo_DropVirtualChannelRequest.Size(m)
}
func (m *DropVirtualChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DropVirtualChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DropVirtualChannelRequest proto.InternalMessageInfo

func (m *DropVirtualChannelRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *DropVirtualChannelRequest) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *DropVirtualChannelRequest) GetSegments() []*DropVirtualChannelSegment {
	if m != nil {
		return m.Segments
	}
	return nil
}

type DropVirtualChannelSegment struct {
	SegmentID            int64                   `protobuf:"varint,1,opt,name=segmentID,proto3" json:"segmentID,omitempty"`
	CollectionID         int64                   `protobuf:"varint,2,opt,name=collectionID,proto3" json:"collectionID,omitempty"`
	Field2BinlogPaths    []*FieldBinlog          `protobuf:"bytes,3,rep,name=field2BinlogPaths,proto3" json:"field2BinlogPaths,omitempty"`
	Field2StatslogPaths  []*FieldBinlog          `protobuf:"bytes,4,rep,name=field2StatslogPaths,proto3" json:"field2StatslogPaths,omitempty"`
	Deltalogs            []*FieldBinlog          `protobuf:"bytes,5,rep,name=deltalogs,proto3" json:"deltalogs,omitempty"`
	StartPosition        *internalpb.MsgPosition `protobuf:"bytes,6,opt,name=startPosition,proto3" json:"startPosition,omitempty"`
	CheckPoint           *internalpb.MsgPosition `protobuf:"bytes,7,opt,name=checkPoint,proto3" json:"checkPoint,omitempty"`
	NumOfRows            int64                   `protobuf:"varint,8,opt,name=numOfRows,proto3" json:"numOfRows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *DropVirtualChannelSegment) Reset()         { *m = DropVirtualChannelSegment{} }
func (m *DropVirtualChannelSegment) String() string { return proto.CompactTextString(m) }
func (*DropVirtualChannelSegment) ProtoMessage()    {}
func (*DropVirtualChannelSegment) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{56}
}

func (m *DropVirtualChannelSegment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropVirtualChannelSegment.Unmarshal(m, b)
}
func (m *DropVirtualChannelSegment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropVirtualChannelSegment.Marshal(b, m, deterministic)
}
func (m *DropVirtualChannelSegment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropVirtualChannelSegment.Merge(m, src)
}
func (m *DropVirtualChannelSegment) XXX_Size() int {
	return xxx_messageInfo_DropVirtualChannelSegment.Size(m)
}
func (m *DropVirtualChannelSegment) XXX_DiscardUnknown() {
	xxx_messageInfo_DropVirtualChannelSegment.DiscardUnknown(m)
}

var xxx_messageInfo_DropVirtualChannelSegment proto.InternalMessageInfo

func (m *DropVirtualChannelSegment) GetSegmentID() int64 {
	if m != nil {
		return m.SegmentID
	}
	return 0
}

func (m *DropVirtualChannelSegment) GetCollectionID() int64 {
	if m != nil {
		return m.CollectionID
	}
	return 0
}

func (m *DropVirtualChannelSegment) GetField2BinlogPaths() []*FieldBinlog {
	if m != nil {
		return m.Field2BinlogPaths
	}
	return nil
}

func (m *DropVirtualChannelSegment) GetField2StatslogPaths() []*FieldBinlog {
	if m != nil {
		return m.Field2StatslogPaths
	}
	return nil
}

func (m *DropVirtualChannelSegment) GetDeltalogs() []*FieldBinlog {
	if m != nil {
		return m.Deltalogs
	}
	return nil
}

func (m *DropVirtualChannelSegment) GetStartPosition() *internalpb.MsgPosition {
	if m != nil {
		return m.StartPosition
	}
	return nil
}

func (m *DropVirtualChannelSegment) GetCheckPoint() *internalpb.MsgPosition {
	if m != nil {
		return m.CheckPoint
	}
	return nil
}

func (m *DropVirtualChannelSegment) GetNumOfRows() int64 {
	if m != nil {
		return m.NumOfRows
	}
	return 0
}

type DropVirtualChannelResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DropVirtualChannelResponse) Reset()         { *m = DropVirtualChannelResponse{} }
func (m *DropVirtualChannelResponse) String() string { return proto.CompactTextString(m) }
func (*DropVirtualChannelResponse) ProtoMessage()    {}
func (*DropVirtualChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{57}
}

func (m *DropVirtualChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropVirtualChannelResponse.Unmarshal(m, b)
}
func (m *DropVirtualChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropVirtualChannelResponse.Marshal(b, m, deterministic)
}
func (m *DropVirtualChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropVirtualChannelResponse.Merge(m, src)
}
func (m *DropVirtualChannelResponse) XXX_Size() int {
	return xxx_messageInfo_DropVirtualChannelResponse.Size(m)
}
func (m *DropVirtualChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DropVirtualChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DropVirtualChannelResponse proto.InternalMessageInfo

func (m *DropVirtualChannelResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ImportTask struct {
	Status               *commonpb.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	CollectionId         int64                    `protobuf:"varint,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	PartitionId          int64                    `protobuf:"varint,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	ChannelNames         []string                 `protobuf:"bytes,4,rep,name=channel_names,json=channelNames,proto3" json:"channel_names,omitempty"`
	RowBased             bool                     `protobuf:"varint,5,opt,name=row_based,json=rowBased,proto3" json:"row_based,omitempty"`
	TaskId               int64                    `protobuf:"varint,6,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Files                []string                 `protobuf:"bytes,7,rep,name=files,proto3" json:"files,omitempty"`
	Infos                []*commonpb.KeyValuePair `protobuf:"bytes,8,rep,name=infos,proto3" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ImportTask) Reset()         { *m = ImportTask{} }
func (m *ImportTask) String() string { return proto.CompactTextString(m) }
func (*ImportTask) ProtoMessage()    {}
func (*ImportTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{58}
}

func (m *ImportTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportTask.Unmarshal(m, b)
}
func (m *ImportTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportTask.Marshal(b, m, deterministic)
}
func (m *ImportTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportTask.Merge(m, src)
}
func (m *ImportTask) XXX_Size() int {
	return xxx_messageInfo_ImportTask.Size(m)
}
func (m *ImportTask) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportTask.DiscardUnknown(m)
}

var xxx_messageInfo_ImportTask proto.InternalMessageInfo

func (m *ImportTask) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ImportTask) GetCollectionId() int64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

func (m *ImportTask) GetPartitionId() int64 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *ImportTask) GetChannelNames() []string {
	if m != nil {
		return m.ChannelNames
	}
	return nil
}

func (m *ImportTask) GetRowBased() bool {
	if m != nil {
		return m.RowBased
	}
	return false
}

func (m *ImportTask) GetTaskId() int64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *ImportTask) GetFiles() []string {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *ImportTask) GetInfos() []*commonpb.KeyValuePair {
	if m != nil {
		return m.Infos
	}
	return nil
}

type ImportTaskState struct {
	StateCode            commonpb.ImportState `protobuf:"varint,1,opt,name=stateCode,proto3,enum=milvus.proto.common.ImportState" json:"stateCode,omitempty"`
	Segments             []int64              `protobuf:"varint,2,rep,packed,name=segments,proto3" json:"segments,omitempty"`
	RowIds               []int64              `protobuf:"varint,3,rep,packed,name=row_ids,json=rowIds,proto3" json:"row_ids,omitempty"`
	RowCount             int64                `protobuf:"varint,4,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
	ErrorMessage         string               `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ImportTaskState) Reset()         { *m = ImportTaskState{} }
func (m *ImportTaskState) String() string { return proto.CompactTextString(m) }
func (*ImportTaskState) ProtoMessage()    {}
func (*ImportTaskState) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{59}
}

func (m *ImportTaskState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportTaskState.Unmarshal(m, b)
}
func (m *ImportTaskState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportTaskState.Marshal(b, m, deterministic)
}
func (m *ImportTaskState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportTaskState.Merge(m, src)
}
func (m *ImportTaskState) XXX_Size() int {
	return xxx_messageInfo_ImportTaskState.Size(m)
}
func (m *ImportTaskState) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportTaskState.DiscardUnknown(m)
}

var xxx_messageInfo_ImportTaskState proto.InternalMessageInfo

func (m *ImportTaskState) GetStateCode() commonpb.ImportState {
	if m != nil {
		return m.StateCode
	}
	return commonpb.ImportState_ImportPending
}

func (m *ImportTaskState) GetSegments() []int64 {
	if m != nil {
		return m.Segments
	}
	return nil
}

func (m *ImportTaskState) GetRowIds() []int64 {
	if m != nil {
		return m.RowIds
	}
	return nil
}

func (m *ImportTaskState) GetRowCount() int64 {
	if m != nil {
		return m.RowCount
	}
	return 0
}

func (m *ImportTaskState) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type ImportTaskInfo struct {
	Id                   int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RequestId            int64            `protobuf:"varint,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // Deprecated: Do not use.
	DatanodeId           int64            `protobuf:"varint,3,opt,name=datanode_id,json=datanodeId,proto3" json:"datanode_id,omitempty"`
	CollectionId         int64            `protobuf:"varint,4,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	PartitionId          int64            `protobuf:"varint,5,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	ChannelNames         []string         `protobuf:"bytes,6,rep,name=channel_names,json=channelNames,proto3" json:"channel_names,omitempty"`
	Bucket               string           `protobuf:"bytes,7,opt,name=bucket,proto3" json:"bucket,omitempty"`
	RowBased             bool             `protobuf:"varint,8,opt,name=row_based,json=rowBased,proto3" json:"row_based,omitempty"`
	Files                []string         `protobuf:"bytes,9,rep,name=files,proto3" json:"files,omitempty"`
	CreateTs             int64            `protobuf:"varint,10,opt,name=create_ts,json=createTs,proto3" json:"create_ts,omitempty"`
	State                *ImportTaskState `protobuf:"bytes,11,opt,name=state,proto3" json:"state,omitempty"`
	DataQueryable        bool             `protobuf:"varint,12,opt,name=data_queryable,json=dataQueryable,proto3" json:"data_queryable,omitempty"`
	DataIndexed          bool             `protobuf:"varint,13,opt,name=data_indexed,json=dataIndexed,proto3" json:"data_indexed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ImportTaskInfo) Reset()         { *m = ImportTaskInfo{} }
func (m *ImportTaskInfo) String() string { return proto.CompactTextString(m) }
func (*ImportTaskInfo) ProtoMessage()    {}
func (*ImportTaskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{60}
}

func (m *ImportTaskInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportTaskInfo.Unmarshal(m, b)
}
func (m *ImportTaskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportTaskInfo.Marshal(b, m, deterministic)
}
func (m *ImportTaskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportTaskInfo.Merge(m, src)
}
func (m *ImportTaskInfo) XXX_Size() int {
	return xxx_messageInfo_ImportTaskInfo.Size(m)
}
func (m *ImportTaskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportTaskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImportTaskInfo proto.InternalMessageInfo

func (m *ImportTaskInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Deprecated: Do not use.
func (m *ImportTaskInfo) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *ImportTaskInfo) GetDatanodeId() int64 {
	if m != nil {
		return m.DatanodeId
	}
	return 0
}

func (m *ImportTaskInfo) GetCollectionId() int64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

func (m *ImportTaskInfo) GetPartitionId() int64 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *ImportTaskInfo) GetChannelNames() []string {
	if m != nil {
		return m.ChannelNames
	}
	return nil
}

func (m *ImportTaskInfo) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *ImportTaskInfo) GetRowBased() bool {
	if m != nil {
		return m.RowBased
	}
	return false
}

func (m *ImportTaskInfo) GetFiles() []string {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *ImportTaskInfo) GetCreateTs() int64 {
	if m != nil {
		return m.CreateTs
	}
	return 0
}

func (m *ImportTaskInfo) GetState() *ImportTaskState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *ImportTaskInfo) GetDataQueryable() bool {
	if m != nil {
		return m.DataQueryable
	}
	return false
}

func (m *ImportTaskInfo) GetDataIndexed() bool {
	if m != nil {
		return m.DataIndexed
	}
	return false
}

type ImportTaskResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	DatanodeId           int64            `protobuf:"varint,2,opt,name=datanode_id,json=datanodeId,proto3" json:"datanode_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ImportTaskResponse) Reset()         { *m = ImportTaskResponse{} }
func (m *ImportTaskResponse) String() string { return proto.CompactTextString(m) }
func (*ImportTaskResponse) ProtoMessage()    {}
func (*ImportTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{61}
}

func (m *ImportTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportTaskResponse.Unmarshal(m, b)
}
func (m *ImportTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportTaskResponse.Marshal(b, m, deterministic)
}
func (m *ImportTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportTaskResponse.Merge(m, src)
}
func (m *ImportTaskResponse) XXX_Size() int {
	return xxx_messageInfo_ImportTaskResponse.Size(m)
}
func (m *ImportTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportTaskResponse proto.InternalMessageInfo

func (m *ImportTaskResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ImportTaskResponse) GetDatanodeId() int64 {
	if m != nil {
		return m.DatanodeId
	}
	return 0
}

type ImportTaskRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	ImportTask           *ImportTask       `protobuf:"bytes,2,opt,name=import_task,json=importTask,proto3" json:"import_task,omitempty"`
	WorkingNodes         []int64           `protobuf:"varint,3,rep,packed,name=working_nodes,json=workingNodes,proto3" json:"working_nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ImportTaskRequest) Reset()         { *m = ImportTaskRequest{} }
func (m *ImportTaskRequest) String() string { return proto.CompactTextString(m) }
func (*ImportTaskRequest) ProtoMessage()    {}
func (*ImportTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{62}
}

func (m *ImportTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportTaskRequest.Unmarshal(m, b)
}
func (m *ImportTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportTaskRequest.Marshal(b, m, deterministic)
}
func (m *ImportTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportTaskRequest.Merge(m, src)
}
func (m *ImportTaskRequest) XXX_Size() int {
	return xxx_messageInfo_ImportTaskRequest.Size(m)
}
func (m *ImportTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportTaskRequest proto.InternalMessageInfo

func (m *ImportTaskRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ImportTaskRequest) GetImportTask() *ImportTask {
	if m != nil {
		return m.ImportTask
	}
	return nil
}

func (m *ImportTaskRequest) GetWorkingNodes() []int64 {
	if m != nil {
		return m.WorkingNodes
	}
	return nil
}

type UpdateSegmentStatisticsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Stats                []*SegmentStats   `protobuf:"bytes,2,rep,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UpdateSegmentStatisticsRequest) Reset()         { *m = UpdateSegmentStatisticsRequest{} }
func (m *UpdateSegmentStatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSegmentStatisticsRequest) ProtoMessage()    {}
func (*UpdateSegmentStatisticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{63}
}

func (m *UpdateSegmentStatisticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSegmentStatisticsRequest.Unmarshal(m, b)
}
func (m *UpdateSegmentStatisticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSegmentStatisticsRequest.Marshal(b, m, deterministic)
}
func (m *UpdateSegmentStatisticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSegmentStatisticsRequest.Merge(m, src)
}
func (m *UpdateSegmentStatisticsRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSegmentStatisticsRequest.Size(m)
}
func (m *UpdateSegmentStatisticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSegmentStatisticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSegmentStatisticsRequest proto.InternalMessageInfo

func (m *UpdateSegmentStatisticsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *UpdateSegmentStatisticsRequest) GetStats() []*SegmentStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type ResendSegmentStatsRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResendSegmentStatsRequest) Reset()         { *m = ResendSegmentStatsRequest{} }
func (m *ResendSegmentStatsRequest) String() string { return proto.CompactTextString(m) }
func (*ResendSegmentStatsRequest) ProtoMessage()    {}
func (*ResendSegmentStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{64}
}

func (m *ResendSegmentStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResendSegmentStatsRequest.Unmarshal(m, b)
}
func (m *ResendSegmentStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResendSegmentStatsRequest.Marshal(b, m, deterministic)
}
func (m *ResendSegmentStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResendSegmentStatsRequest.Merge(m, src)
}
func (m *ResendSegmentStatsRequest) XXX_Size() int {
	return xxx_messageInfo_ResendSegmentStatsRequest.Size(m)
}
func (m *ResendSegmentStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResendSegmentStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResendSegmentStatsRequest proto.InternalMessageInfo

func (m *ResendSegmentStatsRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type ResendSegmentStatsResponse struct {
	Status               *commonpb.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	SegResent            []int64          `protobuf:"varint,2,rep,packed,name=seg_resent,json=segResent,proto3" json:"seg_resent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ResendSegmentStatsResponse) Reset()         { *m = ResendSegmentStatsResponse{} }
func (m *ResendSegmentStatsResponse) String() string { return proto.CompactTextString(m) }
func (*ResendSegmentStatsResponse) ProtoMessage()    {}
func (*ResendSegmentStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{65}
}

func (m *ResendSegmentStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResendSegmentStatsResponse.Unmarshal(m, b)
}
func (m *ResendSegmentStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResendSegmentStatsResponse.Marshal(b, m, deterministic)
}
func (m *ResendSegmentStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResendSegmentStatsResponse.Merge(m, src)
}
func (m *ResendSegmentStatsResponse) XXX_Size() int {
	return xxx_messageInfo_ResendSegmentStatsResponse.Size(m)
}
func (m *ResendSegmentStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResendSegmentStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResendSegmentStatsResponse proto.InternalMessageInfo

func (m *ResendSegmentStatsResponse) GetStatus() *commonpb.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ResendSegmentStatsResponse) GetSegResent() []int64 {
	if m != nil {
		return m.SegResent
	}
	return nil
}

type AddSegmentRequest struct {
	Base                 *commonpb.MsgBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	SegmentId            int64             `protobuf:"varint,2,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	ChannelName          string            `protobuf:"bytes,3,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	CollectionId         int64             `protobuf:"varint,4,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	PartitionId          int64             `protobuf:"varint,5,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	RowNum               int64             `protobuf:"varint,6,opt,name=row_num,json=rowNum,proto3" json:"row_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AddSegmentRequest) Reset()         { *m = AddSegmentRequest{} }
func (m *AddSegmentRequest) String() string { return proto.CompactTextString(m) }
func (*AddSegmentRequest) ProtoMessage()    {}
func (*AddSegmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{66}
}

func (m *AddSegmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSegmentRequest.Unmarshal(m, b)
}
func (m *AddSegmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSegmentRequest.Marshal(b, m, deterministic)
}
func (m *AddSegmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSegmentRequest.Merge(m, src)
}
func (m *AddSegmentRequest) XXX_Size() int {
	return xxx_messageInfo_AddSegmentRequest.Size(m)
}
func (m *AddSegmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSegmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddSegmentRequest proto.InternalMessageInfo

func (m *AddSegmentRequest) GetBase() *commonpb.MsgBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *AddSegmentRequest) GetSegmentId() int64 {
	if m != nil {
		return m.SegmentId
	}
	return 0
}

func (m *AddSegmentRequest) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *AddSegmentRequest) GetCollectionId() int64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

func (m *AddSegmentRequest) GetPartitionId() int64 {
	if m != nil {
		return m.PartitionId
	}
	return 0
}

func (m *AddSegmentRequest) GetRowNum() int64 {
	if m != nil {
		return m.RowNum
	}
	return 0
}

type SegmentReferenceLock struct {
	TaskID               int64    `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	NodeID               int64    `protobuf:"varint,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	SegmentIDs           []int64  `protobuf:"varint,3,rep,packed,name=segmentIDs,proto3" json:"segmentIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentReferenceLock) Reset()         { *m = SegmentReferenceLock{} }
func (m *SegmentReferenceLock) String() string { return proto.CompactTextString(m) }
func (*SegmentReferenceLock) ProtoMessage()    {}
func (*SegmentReferenceLock) Descriptor() ([]byte, []int) {
	return fileDescriptor_82cd95f524594f49, []int{67}
}

func (m *SegmentReferenceLock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentReferenceLock.Unmarshal(m, b)
}
func (m *SegmentReferenceLock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentReferenceLock.Marshal(b, m, deterministic)
}
func (m *SegmentReferenceLock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentReferenceLock.Merge(m, src)
}
func (m *SegmentReferenceLock) XXX_Size() int {
	return xxx_messageInfo_SegmentReferenceLock.Size(m)
}
func (m *SegmentReferenceLock) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentReferenceLock.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentReferenceLock proto.InternalMessageInfo

func (m *SegmentReferenceLock) GetTaskID() int64 {
	if m != nil {
		return m.TaskID
	}
	return 0
}

func (m *SegmentReferenceLock) GetNodeID() int64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *SegmentReferenceLock) GetSegmentIDs() []int64 {
	if m != nil {
		return m.SegmentIDs
	}
	return nil
}

func init() {
	proto.RegisterEnum("milvus.proto.data.ChannelWatchState", ChannelWatchState_name, ChannelWatchState_value)
	proto.RegisterEnum("milvus.proto.data.CompactionType", CompactionType_name, CompactionType_value)
	proto.RegisterType((*Empty)(nil), "milvus.proto.data.Empty")
	proto.RegisterType((*FlushRequest)(nil), "milvus.proto.data.FlushRequest")
	proto.RegisterType((*FlushResponse)(nil), "milvus.proto.data.FlushResponse")
	proto.RegisterType((*SegmentIDRequest)(nil), "milvus.proto.data.SegmentIDRequest")
	proto.RegisterType((*AssignSegmentIDRequest)(nil), "milvus.proto.data.AssignSegmentIDRequest")
	proto.RegisterType((*SegmentIDAssignment)(nil), "milvus.proto.data.SegmentIDAssignment")
	proto.RegisterType((*AssignSegmentIDResponse)(nil), "milvus.proto.data.AssignSegmentIDResponse")
	proto.RegisterType((*GetSegmentStatesRequest)(nil), "milvus.proto.data.GetSegmentStatesRequest")
	proto.RegisterType((*SegmentStateInfo)(nil), "milvus.proto.data.SegmentStateInfo")
	proto.RegisterType((*GetSegmentStatesResponse)(nil), "milvus.proto.data.GetSegmentStatesResponse")
	proto.RegisterType((*GetSegmentInfoRequest)(nil), "milvus.proto.data.GetSegmentInfoRequest")
	proto.RegisterType((*GetSegmentInfoResponse)(nil), "milvus.proto.data.GetSegmentInfoResponse")
	proto.RegisterType((*GetInsertBinlogPathsRequest)(nil), "milvus.proto.data.GetInsertBinlogPathsRequest")
	proto.RegisterType((*GetInsertBinlogPathsResponse)(nil), "milvus.proto.data.GetInsertBinlogPathsResponse")
	proto.RegisterType((*GetCollectionStatisticsRequest)(nil), "milvus.proto.data.GetCollectionStatisticsRequest")
	proto.RegisterType((*GetCollectionStatisticsResponse)(nil), "milvus.proto.data.GetCollectionStatisticsResponse")
	proto.RegisterType((*GetPartitionStatisticsRequest)(nil), "milvus.proto.data.GetPartitionStatisticsRequest")
	proto.RegisterType((*GetPartitionStatisticsResponse)(nil), "milvus.proto.data.GetPartitionStatisticsResponse")
	proto.RegisterType((*GetSegmentInfoChannelRequest)(nil), "milvus.proto.data.GetSegmentInfoChannelRequest")
	proto.RegisterType((*AcquireSegmentLockRequest)(nil), "milvus.proto.data.AcquireSegmentLockRequest")
	proto.RegisterType((*ReleaseSegmentLockRequest)(nil), "milvus.proto.data.ReleaseSegmentLockRequest")
	proto.RegisterType((*VchannelInfo)(nil), "milvus.proto.data.VchannelInfo")
	proto.RegisterType((*WatchDmChannelsRequest)(nil), "milvus.proto.data.WatchDmChannelsRequest")
	proto.RegisterType((*FlushSegmentsRequest)(nil), "milvus.proto.data.FlushSegmentsRequest")
	proto.RegisterType((*SegmentMsg)(nil), "milvus.proto.data.SegmentMsg")
	proto.RegisterType((*CollectionInfo)(nil), "milvus.proto.data.CollectionInfo")
	proto.RegisterType((*SegmentInfo)(nil), "milvus.proto.data.SegmentInfo")
	proto.RegisterType((*SegmentStartPosition)(nil), "milvus.proto.data.SegmentStartPosition")
	proto.RegisterType((*SaveBinlogPathsRequest)(nil), "milvus.proto.data.SaveBinlogPathsRequest")
	proto.RegisterType((*CheckPoint)(nil), "milvus.proto.data.CheckPoint")
	proto.RegisterType((*DeltaLogInfo)(nil), "milvus.proto.data.DeltaLogInfo")
	proto.RegisterType((*DataNodeTtMsg)(nil), "milvus.proto.data.DataNodeTtMsg")
	proto.RegisterType((*SegmentStats)(nil), "milvus.proto.data.SegmentStats")
	proto.RegisterType((*ChannelStatus)(nil), "milvus.proto.data.ChannelStatus")
	proto.RegisterType((*DataNodeInfo)(nil), "milvus.proto.data.DataNodeInfo")
	proto.RegisterType((*SegmentBinlogs)(nil), "milvus.proto.data.SegmentBinlogs")
	proto.RegisterType((*FieldBinlog)(nil), "milvus.proto.data.FieldBinlog")
	proto.RegisterType((*Binlog)(nil), "milvus.proto.data.Binlog")
	proto.RegisterType((*GetRecoveryInfoResponse)(nil), "milvus.proto.data.GetRecoveryInfoResponse")
	proto.RegisterType((*GetRecoveryInfoRequest)(nil), "milvus.proto.data.GetRecoveryInfoRequest")
	proto.RegisterType((*GetFlushedSegmentsRequest)(nil), "milvus.proto.data.GetFlushedSegmentsRequest")
	proto.RegisterType((*GetFlushedSegmentsResponse)(nil), "milvus.proto.data.GetFlushedSegmentsResponse")
	proto.RegisterType((*SegmentFlushCompletedMsg)(nil), "milvus.proto.data.SegmentFlushCompletedMsg")
	proto.RegisterType((*ChannelWatchInfo)(nil), "milvus.proto.data.ChannelWatchInfo")
	proto.RegisterType((*CompactionStateRequest)(nil), "milvus.proto.data.CompactionStateRequest")
	proto.RegisterType((*CompactionSegmentBinlogs)(nil), "milvus.proto.data.CompactionSegmentBinlogs")
	proto.RegisterType((*CompactionPlan)(nil), "milvus.proto.data.CompactionPlan")
	proto.RegisterType((*CompactionResult)(nil), "milvus.proto.data.CompactionResult")
	proto.RegisterType((*CompactionStateResult)(nil), "milvus.proto.data.CompactionStateResult")
	proto.RegisterType((*CompactionStateResponse)(nil), "milvus.proto.data.CompactionStateResponse")
	proto.RegisterType((*SegmentFieldBinlogMeta)(nil), "milvus.proto.data.SegmentFieldBinlogMeta")
	proto.RegisterType((*WatchChannelsRequest)(nil), "milvus.proto.data.WatchChannelsRequest")
	proto.RegisterType((*WatchChannelsResponse)(nil), "milvus.proto.data.WatchChannelsResponse")
	proto.RegisterType((*SetSegmentStateRequest)(nil), "milvus.proto.data.SetSegmentStateRequest")
	proto.RegisterType((*SetSegmentStateResponse)(nil), "milvus.proto.data.SetSegmentStateResponse")
	proto.RegisterType((*DropVirtualChannelRequest)(nil), "milvus.proto.data.DropVirtualChannelRequest")
	proto.RegisterType((*DropVirtualChannelSegment)(nil), "milvus.proto.data.DropVirtualChannelSegment")
	proto.RegisterType((*DropVirtualChannelResponse)(nil), "milvus.proto.data.DropVirtualChannelResponse")
	proto.RegisterType((*ImportTask)(nil), "milvus.proto.data.ImportTask")
	proto.RegisterType((*ImportTaskState)(nil), "milvus.proto.data.ImportTaskState")
	proto.RegisterType((*ImportTaskInfo)(nil), "milvus.proto.data.ImportTaskInfo")
	proto.RegisterType((*ImportTaskResponse)(nil), "milvus.proto.data.ImportTaskResponse")
	proto.RegisterType((*ImportTaskRequest)(nil), "milvus.proto.data.ImportTaskRequest")
	proto.RegisterType((*UpdateSegmentStatisticsRequest)(nil), "milvus.proto.data.UpdateSegmentStatisticsRequest")
	proto.RegisterType((*ResendSegmentStatsRequest)(nil), "milvus.proto.data.ResendSegmentStatsRequest")
	proto.RegisterType((*ResendSegmentStatsResponse)(nil), "milvus.proto.data.ResendSegmentStatsResponse")
	proto.RegisterType((*AddSegmentRequest)(nil), "milvus.proto.data.AddSegmentRequest")
	proto.RegisterType((*SegmentReferenceLock)(nil), "milvus.proto.data.SegmentReferenceLock")
}

func init() { proto.RegisterFile("data_coord.proto", fileDescriptor_82cd95f524594f49) }

var fileDescriptor_82cd95f524594f49 = []byte{
	// 3863 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x3c, 0xdd, 0x6f, 0x1c, 0xd7,
	0x57, 0x99, 0xfd, 0xf2, 0xee, 0xd9, 0x0f, 0xaf, 0x6f, 0x52, 0x7b, 0xb3, 0xf9, 0x9e, 0x34, 0xa9,
	0x93, 0x5f, 0x9a, 0xb4, 0x0e, 0xd5, 0xaf, 0x22, 0xbf, 0xb6, 0x8a, 0xe3, 0xd8, 0x59, 0xb0, 0x53,
	0x67, 0xec, 0x34, 0x12, 0x45, 0x5a, 0x8d, 0x77, 0xae, 0xd7, 0x53, 0xef, 0xcc, 0x6c, 0x66, 0x66,
	0xe3, 0xb8, 0x3c, 0xb4, 0xa2, 0x12, 0x52, 0x11, 0xa2, 0x08, 0x84, 0x04, 0x0f, 0x48, 0x88, 0xa7,
	0x82, 0x84, 0x84, 0x54, 0xf1, 0x00, 0xa8, 0xef, 0x15, 0x3c, 0x20, 0x1e, 0xf9, 0x07, 0x80, 0x27,
	0xfe, 0x04, 0x84, 0xee, 0xc7, 0xdc, 0xf9, 0xde, 0x1d, 0xef, 0x26, 0x0d, 0xe2, 0xcd, 0xf7, 0xcc,
	0x39, 0xf7, 0x9e, 0x7b, 0xee, 0xf9, 0xbe, 0x77, 0x0d, 0x4d, 0x4d, 0x75, 0xd5, 0x6e, 0xcf, 0xb2,
	0x6c, 0xed, 0xf6, 0xd0, 0xb6, 0x5c, 0x0b, 0x2d, 0x18, 0xfa, 0xe0, 0xc5, 0xc8, 0x61, 0xa3, 0xdb,
	0xe4, 0x73, 0xbb, 0xd6, 0xb3, 0x0c, 0xc3, 0x32, 0x19, 0xa8, 0xdd, 0xd0, 0x4d, 0x17, 0xdb, 0xa6,
	0x3a, 0xe0, 0xe3, 0x5a, 0x90, 0xa0, 0x5d, 0x73, 0x7a, 0x07, 0xd8, 0x50, 0xd9, 0x48, 0x9e, 0x83,
	0xe2, 0x43, 0x63, 0xe8, 0x1e, 0xcb, 0x7f, 0x26, 0x41, 0x6d, 0x7d, 0x30, 0x72, 0x0e, 0x14, 0xfc,
	0x7c, 0x84, 0x1d, 0x17, 0xbd, 0x07, 0x85, 0x3d, 0xd5, 0xc1, 0x2d, 0xe9, 0xb2, 0xb4, 0x5c, 0x5d,
	0x39, 0x7f, 0x3b, 0xb4, 0x2a, 0x5f, 0x6f, 0xcb, 0xe9, 0xaf, 0xaa, 0x0e, 0x56, 0x28, 0x26, 0x42,
	0x50, 0xd0, 0xf6, 0x3a, 0x6b, 0xad, 0xdc, 0x65, 0x69, 0x39, 0xaf, 0xd0, 0xbf, 0xd1, 0x45, 0x00,
	0x07, 0xf7, 0x0d, 0x6c, 0xba, 0x9d, 0x35, 0xa7, 0x95, 0xbf, 0x9c, 0x5f, 0xce, 0x2b, 0x01, 0x08,
	0x92, 0xa1, 0xd6, 0xb3, 0x06, 0x03, 0xdc, 0x73, 0x75, 0xcb, 0xec, 0xac, 0xb5, 0x0a, 0x94, 0x36,
	0x04, 0x93, 0xff, 0x43, 0x82, 0x3a, 0x67, 0xcd, 0x19, 0x5a, 0xa6, 0x83, 0xd1, 0x5d, 0x28, 0x39,
	0xae, 0xea, 0x8e, 0x1c, 0xce, 0xdd, 0xb9, 0x44, 0xee, 0x76, 0x28, 0x8a, 0xc2, 0x51, 0x13, 0xd9,
	0x8b, 0x2e, 0x9f, 0x8f, 0x2f, 0x1f, 0xd9, 0x42, 0x21, 0xb6, 0x85, 0x65, 0x98, 0xdf, 0x27, 0xdc,
	0xed, 0xf8, 0x48, 0x45, 0x8a, 0x14, 0x05, 0x93, 0x99, 0x5c, 0xdd, 0xc0, 0x9f, 0xee, 0xef, 0x60,
	0x75, 0xd0, 0x2a, 0xd1, 0xb5, 0x02, 0x10, 0xf9, 0xdf, 0x24, 0x68, 0x0a, 0x74, 0xef, 0x1c, 0xce,
	0x40, 0xb1, 0x67, 0x8d, 0x4c, 0x97, 0x6e, 0xb5, 0xae, 0xb0, 0x01, 0xba, 0x02, 0xb5, 0xde, 0x81,
	0x6a, 0x9a, 0x78, 0xd0, 0x35, 0x55, 0x03, 0xd3, 0x4d, 0x55, 0x94, 0x2a, 0x87, 0x3d, 0x56, 0x0d,
	0x9c, 0x69, 0x6f, 0x97, 0xa1, 0x3a, 0x54, 0x6d, 0x57, 0x0f, 0x49, 0x3f, 0x08, 0x42, 0x6d, 0x28,
	0xeb, 0x4e, 0xc7, 0x18, 0x5a, 0xb6, 0xdb, 0x2a, 0x5e, 0x96, 0x96, 0xcb, 0x8a, 0x18, 0x93, 0x15,
	0x74, 0xfa, 0xd7, 0xae, 0xea, 0x1c, 0x76, 0xd6, 0xf8, 0x8e, 0x42, 0x30, 0xf9, 0x2f, 0x25, 0x58,
	0xbc, 0xef, 0x38, 0x7a, 0xdf, 0x8c, 0xed, 0x6c, 0x11, 0x4a, 0xa6, 0xa5, 0xe1, 0xce, 0x1a, 0xdd,
	0x5a, 0x5e, 0xe1, 0x23, 0x74, 0x0e, 0x2a, 0x43, 0x8c, 0xed, 0xae, 0x6d, 0x0d, 0xbc, 0x8d, 0x95,
	0x09, 0x40, 0xb1, 0x06, 0x18, 0x3d, 0x81, 0x05, 0x27, 0x32, 0x11, 0xd3, 0xab, 0xea, 0xca, 0xd5,
	0xdb, 0x31, 0xcb, 0xb8, 0x1d, 0x5d, 0x54, 0x89, 0x53, 0xcb, 0x5f, 0xe7, 0xe0, 0xb4, 0xc0, 0x63,
	0xbc, 0x92, 0xbf, 0x89, 0xe4, 0x1d, 0xdc, 0x17, 0xec, 0xb1, 0x41, 0x16, 0xc9, 0x8b, 0x23, 0xcb,
	0x07, 0x8f, 0x2c, 0x83, 0xaa, 0x47, 0xcf, 0xa3, 0x18, 0x3f, 0x8f, 0x4b, 0x50, 0xc5, 0x2f, 0x87,
	0xba, 0x8d, 0xbb, 0x44, 0x71, 0xa8, 0xc8, 0x0b, 0x0a, 0x30, 0xd0, 0xae, 0x6e, 0x04, 0x6d, 0x63,
	0x2e, 0xb3, 0x6d, 0xc8, 0x7f, 0x25, 0xc1, 0x52, 0xec, 0x94, 0xb8, 0xb1, 0x29, 0xd0, 0xa4, 0x3b,
	0xf7, 0x25, 0x43, 0xcc, 0x8e, 0x08, 0xfc, 0xfa, 0x38, 0x81, 0xfb, 0xe8, 0x4a, 0x8c, 0x3e, 0xc0,
	0x64, 0x2e, 0x3b, 0x93, 0x87, 0xb0, 0xb4, 0x81, 0x5d, 0xbe, 0x00, 0xf9, 0x86, 0x9d, 0xe9, 0x9d,
	0x55, 0xd8, 0xaa, 0x73, 0x51, 0xab, 0x96, 0xff, 0x2e, 0x27, 0x6c, 0x91, 0x2e, 0xd5, 0x31, 0xf7,
	0x2d, 0x74, 0x1e, 0x2a, 0x02, 0x85, 0x6b, 0x85, 0x0f, 0x40, 0xbf, 0x84, 0x22, 0xe1, 0x94, 0xa9,
	0x44, 0x63, 0xe5, 0x4a, 0xf2, 0x9e, 0x02, 0x73, 0x2a, 0x0c, 0x1f, 0x75, 0xa0, 0xe1, 0xb8, 0xaa,
	0xed, 0x76, 0x87, 0x96, 0x43, 0xcf, 0x99, 0x2a, 0x4e, 0x75, 0x45, 0x0e, 0xcf, 0x20, 0xdc, 0xfa,
	0x96, 0xd3, 0xdf, 0xe6, 0x98, 0x4a, 0x9d, 0x52, 0x7a, 0x43, 0xf4, 0x10, 0x6a, 0xd8, 0xd4, 0xfc,
	0x89, 0x0a, 0x99, 0x27, 0xaa, 0x62, 0x53, 0x13, 0xd3, 0xf8, 0xe7, 0x53, 0xcc, 0x7e, 0x3e, 0x7f,
	0x20, 0x41, 0x2b, 0x7e, 0x40, 0xb3, 0xb8, 0xec, 0x7b, 0x8c, 0x08, 0xb3, 0x03, 0x1a, 0x6b, 0xe1,
	0xe2, 0x90, 0x14, 0x4e, 0x22, 0xff, 0xa9, 0x04, 0x6f, 0xf9, 0xec, 0xd0, 0x4f, 0xaf, 0x4b, 0x5b,
	0xd0, 0x4d, 0x68, 0xea, 0x66, 0x6f, 0x30, 0xd2, 0xf0, 0x53, 0xf3, 0x11, 0x56, 0x07, 0xee, 0xc1,
	0x31, 0x3d, 0xc3, 0xb2, 0x12, 0x83, 0xcb, 0xdf, 0x48, 0xb0, 0x18, 0xe5, 0x6b, 0x16, 0x21, 0xfd,
	0x1a, 0x14, 0x75, 0x73, 0xdf, 0xf2, 0x64, 0x74, 0x71, 0x8c, 0x51, 0x92, 0xb5, 0x18, 0xb2, 0x6c,
	0xc0, 0xb9, 0x0d, 0xec, 0x76, 0x4c, 0x07, 0xdb, 0xee, 0xaa, 0x6e, 0x0e, 0xac, 0xfe, 0xb6, 0xea,
	0x1e, 0xcc, 0x60, 0x50, 0x21, 0xdb, 0xc8, 0x45, 0x6c, 0x43, 0xfe, 0x5e, 0x82, 0xf3, 0xc9, 0xeb,
	0xf1, 0xad, 0xb7, 0xa1, 0xbc, 0xaf, 0xe3, 0x81, 0x46, 0xe4, 0x2b, 0x51, 0xf9, 0x8a, 0x31, 0x31,
	0xac, 0x21, 0x41, 0xe6, 0x3b, 0xbc, 0x92, 0xa2, 0xcd, 0x3b, 0xae, 0xad, 0x9b, 0xfd, 0x4d, 0xdd,
	0x71, 0x15, 0x86, 0x1f, 0x90, 0x67, 0x3e, 0xbb, 0x1a, 0xff, 0xbe, 0x04, 0x17, 0x37, 0xb0, 0xfb,
	0x40, 0xf8, 0x65, 0xf2, 0x5d, 0x77, 0x5c, 0xbd, 0xe7, 0xbc, 0xda, 0xdc, 0x28, 0x43, 0x80, 0x96,
	0xbf, 0x93, 0xe0, 0x52, 0x2a, 0x33, 0x5c, 0x74, 0xdc, 0xef, 0x78, 0x5e, 0x39, 0xd9, 0xef, 0xfc,
	0x26, 0x3e, 0xfe, 0x4c, 0x1d, 0x8c, 0xf0, 0xb6, 0xaa, 0xdb, 0xcc, 0xef, 0x4c, 0xe9, 0x85, 0xff,
	0x56, 0x82, 0x0b, 0x1b, 0xd8, 0xdd, 0xf6, 0x62, 0xd2, 0x1b, 0x94, 0x0e, 0xc1, 0x09, 0xc4, 0x46,
	0x2f, 0x39, 0x0b, 0xc1, 0xe4, 0x3f, 0x64, 0xc7, 0x99, 0xc8, 0xef, 0x1b, 0x11, 0xe0, 0x45, 0x6a,
	0x09, 0x01, 0x93, 0x7c, 0xc0, 0x52, 0x07, 0x2e, 0x3e, 0xf9, 0x2f, 0x24, 0x38, 0x7b, 0xbf, 0xf7,
	0x7c, 0xa4, 0xdb, 0x98, 0x23, 0x6d, 0x5a, 0xbd, 0xc3, 0xe9, 0x85, 0xeb, 0xa7, 0x59, 0xb9, 0x50,
	0x9a, 0x35, 0x29, 0x35, 0x5f, 0x84, 0x92, 0xcb, 0xf2, 0x3a, 0x96, 0xa9, 0xf0, 0x11, 0xe5, 0x4f,
	0xc1, 0x03, 0xac, 0x3a, 0xff, 0x37, 0xf9, 0xfb, 0xae, 0x00, 0xb5, 0xcf, 0x78, 0x3a, 0x46, 0xa3,
	0x76, 0x54, 0x93, 0xa4, 0xe4, 0xc4, 0x2b, 0x90, 0xc1, 0x25, 0x25, 0x75, 0x1b, 0x50, 0x77, 0x30,
	0x3e, 0x9c, 0x26, 0x46, 0xd7, 0x08, 0xa1, 0x88, 0xad, 0x9b, 0xb0, 0x30, 0x32, 0x69, 0x69, 0x80,
	0x35, 0x2e, 0x40, 0xa6, 0xb9, 0x93, 0x7d, 0x77, 0x9c, 0x10, 0x3d, 0xe2, 0xd5, 0x47, 0x60, 0xae,
	0x62, 0xa6, 0xb9, 0xa2, 0x64, 0xa8, 0x03, 0x4d, 0xcd, 0xb6, 0x86, 0x43, 0xac, 0x75, 0x1d, 0x6f,
	0xaa, 0x52, 0xb6, 0xa9, 0x38, 0x9d, 0x98, 0xea, 0x3d, 0x38, 0x1d, 0xe5, 0xb4, 0xa3, 0x91, 0x84,
	0x94, 0x9c, 0x61, 0xd2, 0x27, 0x74, 0x0b, 0x16, 0xe2, 0xf8, 0x65, 0x8a, 0x1f, 0xff, 0x80, 0xde,
	0x05, 0x14, 0x61, 0x95, 0xa0, 0x57, 0x18, 0x7a, 0x98, 0x99, 0x8e, 0xe6, 0xc8, 0xdf, 0x4a, 0xb0,
	0xf8, 0x4c, 0x75, 0x7b, 0x07, 0x6b, 0x06, 0xb7, 0xb5, 0x19, 0x7c, 0xd5, 0x47, 0x50, 0x79, 0xc1,
	0xf5, 0xc2, 0x0b, 0x48, 0x97, 0x12, 0xe4, 0x13, 0xd4, 0x40, 0xc5, 0xa7, 0x90, 0x7f, 0x92, 0xe0,
	0xcc, 0x7a, 0xa0, 0x2e, 0x7c, 0x03, 0x5e, 0x73, 0x52, 0x41, 0x7b, 0x1d, 0x1a, 0x86, 0x6a, 0x1f,
	0xc6, 0xea, 0xd9, 0x08, 0x54, 0x7e, 0x09, 0xc0, 0x47, 0x5b, 0x4e, 0x7f, 0x0a, 0xfe, 0x3f, 0x84,
	0x39, 0xbe, 0x2a, 0x77, 0x9f, 0x93, 0xf4, 0xcc, 0x43, 0x97, 0xff, 0x59, 0x82, 0x86, 0x1f, 0x12,
	0xa9, 0x91, 0x37, 0x20, 0x27, 0x4c, 0x3b, 0xd7, 0x59, 0x43, 0x1f, 0x41, 0x89, 0x35, 0x3a, 0xf8,
	0xdc, 0xd7, 0xc2, 0x73, 0xf3, 0x26, 0x48, 0x20, 0xae, 0x52, 0x80, 0xc2, 0x89, 0x88, 0x8c, 0x44,
	0x14, 0x11, 0xce, 0xc7, 0x87, 0xa0, 0x0e, 0xcc, 0x87, 0x53, 0x76, 0xcf, 0x84, 0x2f, 0xa7, 0x05,
	0x8f, 0x35, 0xd5, 0x55, 0x69, 0xec, 0x68, 0x84, 0x32, 0x76, 0x47, 0xfe, 0xef, 0x22, 0x54, 0x03,
	0xbb, 0x8c, 0xed, 0x24, 0x7a, 0xa4, 0xb9, 0xc9, 0x75, 0x63, 0x3e, 0x5e, 0x37, 0x5e, 0x83, 0x86,
	0x4e, 0x93, 0xaf, 0x2e, 0x57, 0x45, 0xea, 0x35, 0x2b, 0x4a, 0x9d, 0x41, 0xb9, 0x5d, 0xa0, 0x8b,
	0x50, 0x35, 0x47, 0x46, 0xd7, 0xda, 0xef, 0xda, 0xd6, 0x91, 0xc3, 0x0b, 0xd0, 0x8a, 0x39, 0x32,
	0x3e, 0xdd, 0x57, 0xac, 0x23, 0xc7, 0xaf, 0x71, 0x4a, 0x27, 0xac, 0x71, 0x2e, 0x42, 0xd5, 0x50,
	0x5f, 0x92, 0x59, 0xbb, 0xe6, 0xc8, 0xa0, 0xb5, 0x69, 0x5e, 0xa9, 0x18, 0xea, 0x4b, 0xc5, 0x3a,
	0x7a, 0x3c, 0x32, 0xd0, 0x32, 0x34, 0x07, 0xaa, 0xe3, 0x76, 0x83, 0xc5, 0x6d, 0x99, 0x16, 0xb7,
	0x0d, 0x02, 0x7f, 0xe8, 0x17, 0xb8, 0xf1, 0x6a, 0xa9, 0x32, 0x43, 0xb5, 0xa4, 0x19, 0x03, 0x7f,
	0x22, 0xc8, 0x5e, 0x2d, 0x69, 0xc6, 0x40, 0x4c, 0xf3, 0x21, 0xcc, 0xed, 0xd1, 0x94, 0xd6, 0x69,
	0x55, 0x53, 0x1d, 0xe6, 0x3a, 0xc9, 0x66, 0x59, 0xe6, 0xab, 0x78, 0xe8, 0xe8, 0x57, 0x50, 0xa1,
	0x99, 0x04, 0xa5, 0xad, 0x65, 0xa2, 0xf5, 0x09, 0x08, 0xb5, 0x86, 0x07, 0xae, 0x4a, 0xa9, 0xeb,
	0xd9, 0xa8, 0x05, 0x01, 0x71, 0xd2, 0x3d, 0x1b, 0xab, 0x2e, 0xd6, 0x56, 0x8f, 0x1f, 0x58, 0xc6,
	0x50, 0xa5, 0xca, 0xd4, 0x6a, 0xd0, 0xb2, 0x25, 0xe9, 0x13, 0x71, 0x0c, 0x3d, 0x31, 0x5a, 0xb7,
	0x2d, 0xa3, 0x35, 0xcf, 0x1c, 0x43, 0x18, 0x8a, 0x2e, 0x00, 0x78, 0xee, 0x59, 0x75, 0x5b, 0x4d,
	0x7a, 0x8a, 0x15, 0x0e, 0xb9, 0xef, 0xca, 0x5f, 0xc1, 0x19, 0x5f, 0x43, 0x02, 0xa7, 0x11, 0x3f,
	0x58, 0x69, 0xda, 0x83, 0x1d, 0x5f, 0x8c, 0xfc, 0x6b, 0x01, 0x16, 0x77, 0xd4, 0x17, 0xf8, 0xf5,
	0xd7, 0x3d, 0x99, 0xfc, 0xf1, 0x26, 0x2c, 0xd0, 0x52, 0x67, 0x25, 0xc0, 0xcf, 0x98, 0x84, 0x20,
	0x78, 0x9c, 0x71, 0x42, 0xf4, 0x09, 0xc9, 0x64, 0x70, 0xef, 0x70, 0xdb, 0xd2, 0xfd, 0x64, 0xe0,
	0x42, 0xc2, 0x3c, 0x0f, 0x04, 0x96, 0x12, 0xa4, 0x40, 0xdb, 0x71, 0xd7, 0xc6, 0xd2, 0x80, 0x77,
	0xc6, 0x56, 0xdf, 0xbe, 0xf4, 0xa3, 0x1e, 0x0e, 0xb5, 0x60, 0x8e, 0xc7, 0x70, 0x6a, 0xf7, 0x65,
	0xc5, 0x1b, 0xa2, 0x6d, 0x38, 0xcd, 0x76, 0xb0, 0xc3, 0x95, 0x9a, 0x6d, 0xbe, 0x9c, 0x69, 0xf3,
	0x49, 0xa4, 0x61, 0x9b, 0xa8, 0x9c, 0xd4, 0x26, 0x5a, 0x30, 0xc7, 0xf5, 0x94, 0xfa, 0x82, 0xb2,
	0xe2, 0x0d, 0xc9, 0x31, 0xb3, 0xbe, 0xa6, 0x6e, 0xf6, 0x5b, 0x55, 0xfa, 0xcd, 0x07, 0x90, 0x9a,
	0x11, 0x7c, 0x79, 0x4e, 0xe8, 0x13, 0x7d, 0x0c, 0x65, 0xa1, 0xe1, 0xb9, 0xcc, 0x1a, 0x2e, 0x68,
	0xa2, 0x3e, 0x3a, 0x1f, 0xf1, 0xd1, 0xf2, 0xbf, 0x48, 0x50, 0x5b, 0x23, 0x5b, 0xda, 0xb4, 0xfa,
	0x34, 0xa2, 0x5c, 0x83, 0x86, 0x8d, 0x7b, 0x96, 0xad, 0x75, 0xb1, 0xe9, 0xda, 0x3a, 0x66, 0xed,
	0x85, 0x82, 0x52, 0x67, 0xd0, 0x87, 0x0c, 0x48, 0xd0, 0x88, 0xdb, 0x75, 0x5c, 0xd5, 0x18, 0x76,
	0xf7, 0x89, 0x79, 0xe7, 0x18, 0x9a, 0x80, 0x52, 0xeb, 0xbe, 0x02, 0x35, 0x1f, 0xcd, 0xb5, 0xe8,
	0xfa, 0x05, 0xa5, 0x2a, 0x60, 0xbb, 0x16, 0x7a, 0x1b, 0x1a, 0x54, 0xa6, 0xdd, 0x81, 0xd5, 0xef,
	0x92, 0x52, 0x9c, 0x07, 0x9b, 0x9a, 0xc6, 0xd9, 0x22, 0x67, 0x15, 0xc6, 0x72, 0xf4, 0x2f, 0x31,
	0x0f, 0x37, 0x02, 0x6b, 0x47, 0xff, 0x12, 0x93, 0x58, 0x5f, 0x27, 0xb1, 0xf3, 0xb1, 0xa5, 0xe1,
	0xdd, 0x29, 0x33, 0x8d, 0x0c, 0x3d, 0xdb, 0xf3, 0x50, 0x11, 0x3b, 0xe0, 0x5b, 0xf2, 0x01, 0x68,
	0x1d, 0x1a, 0x5e, 0x4e, 0xdc, 0x65, 0xa5, 0x62, 0x21, 0x35, 0xf3, 0x0b, 0x44, 0x3f, 0x47, 0xa9,
	0x7b, 0x64, 0x74, 0x28, 0xaf, 0x43, 0x2d, 0xf8, 0x99, 0xac, 0xba, 0x13, 0x55, 0x14, 0x01, 0x20,
	0xda, 0xf8, 0x78, 0x64, 0x90, 0x33, 0xe5, 0x8e, 0xc5, 0x1b, 0xca, 0xdf, 0x48, 0x50, 0xe7, 0x21,
	0x7b, 0x47, 0xdc, 0x6e, 0xd0, 0xad, 0x49, 0x74, 0x6b, 0xf4, 0x6f, 0xf4, 0xeb, 0xe1, 0x86, 0xe4,
	0xdb, 0x89, 0x4e, 0x80, 0x4e, 0x42, 0xb3, 0xe3, 0x50, 0xbc, 0xce, 0xd2, 0x9c, 0xf8, 0x9a, 0x28,
	0x1a, 0x3f, 0x1a, 0xaa, 0x68, 0x2d, 0x98, 0x53, 0x35, 0xcd, 0xc6, 0x8e, 0xc3, 0xf9, 0xf0, 0x86,
	0xe4, 0xcb, 0x0b, 0x6c, 0x3b, 0x9e, 0xca, 0xe7, 0x15, 0x6f, 0x88, 0x7e, 0x05, 0x65, 0x91, 0x4e,
	0xe7, 0x93, 0x52, 0xa8, 0x20, 0x9f, 0xbc, 0x94, 0x16, 0x14, 0xf2, 0xdf, 0xe7, 0xa0, 0xc1, 0x05,
	0xb6, 0xca, 0x63, 0xea, 0x78, 0xe3, 0x5b, 0x85, 0xda, 0xbe, 0x6f, 0xfb, 0xe3, 0x9a, 0x66, 0x41,
	0x17, 0x11, 0xa2, 0x99, 0x64, 0x80, 0xe1, 0xa8, 0x5e, 0x98, 0x29, 0xaa, 0x17, 0x4f, 0xea, 0xc1,
	0xe2, 0x79, 0x5e, 0x29, 0x21, 0xcf, 0x93, 0x7f, 0x1b, 0xaa, 0x81, 0x09, 0xa8, 0x87, 0x66, 0xdd,
	0x36, 0x2e, 0x31, 0x6f, 0x88, 0xee, 0xfa, 0xb9, 0x0d, 0x13, 0xd5, 0xd9, 0x04, 0x5e, 0x22, 0x69,
	0x8d, 0xfc, 0xd7, 0x12, 0x94, 0xf8, 0xcc, 0x97, 0xa0, 0xca, 0x9d, 0x0e, 0xcd, 0xfb, 0xd8, 0xec,
	0xc0, 0x41, 0x24, 0xf1, 0x7b, 0x75, 0x5e, 0xe7, 0x2c, 0x94, 0x23, 0xfe, 0x66, 0x8e, 0x87, 0x05,
	0xef, 0x53, 0xc0, 0xc9, 0x90, 0x4f, 0xd4, 0xbf, 0xfc, 0x24, 0xd1, 0x6b, 0x05, 0x05, 0xf7, 0xac,
	0x17, 0xd8, 0x3e, 0x9e, 0xbd, 0x1f, 0x7b, 0x2f, 0xa0, 0xd0, 0x19, 0xeb, 0x43, 0x41, 0x80, 0xee,
	0xf9, 0xe2, 0xce, 0x27, 0x35, 0xa3, 0x82, 0x1e, 0x86, 0xab, 0xa3, 0x2f, 0xf6, 0x3f, 0x62, 0x9d,
	0xe5, 0xf0, 0x56, 0xa6, 0xcd, 0x6b, 0x5e, 0x49, 0xd9, 0x21, 0xff, 0x89, 0x04, 0x67, 0x37, 0xb0,
	0xbb, 0x1e, 0xee, 0x35, 0xbc, 0x69, 0xae, 0x0c, 0x68, 0x27, 0x31, 0x35, 0xcb, 0xa9, 0xb7, 0xa1,
	0x2c, 0xba, 0x26, 0xec, 0x7e, 0x40, 0x8c, 0xe5, 0xdf, 0x93, 0xa0, 0xc5, 0x57, 0xa1, 0x6b, 0x92,
	0x94, 0x7a, 0x80, 0x5d, 0xac, 0xfd, 0xdc, 0x75, 0xf3, 0x8f, 0x12, 0x34, 0x83, 0x1e, 0x9f, 0x3a,
	0xed, 0x0f, 0xa0, 0x48, 0xdb, 0x13, 0x9c, 0x83, 0x89, 0xca, 0xca, 0xb0, 0x89, 0xcb, 0xa0, 0x69,
	0xde, 0xae, 0x08, 0x4e, 0x7c, 0xe8, 0x87, 0x9d, 0xfc, 0xc9, 0xc3, 0x0e, 0x0f, 0xc3, 0xd6, 0x88,
	0xcc, 0xcb, 0xfa, 0x7a, 0x3e, 0x40, 0xfe, 0x0d, 0x58, 0xf4, 0xcb, 0x11, 0x46, 0x37, 0xad, 0x26,
	0xc9, 0x3f, 0xe4, 0xa0, 0x15, 0x98, 0xec, 0xe7, 0x8e, 0x21, 0x29, 0x99, 0x6f, 0xfe, 0x15, 0x65,
	0xbe, 0x85, 0xd9, 0xe3, 0x46, 0x31, 0x29, 0x6e, 0xfc, 0x53, 0x0e, 0x1a, 0xbe, 0xd4, 0xb6, 0x07,
	0xaa, 0x89, 0x16, 0xa1, 0x34, 0x1c, 0xa8, 0x7e, 0x63, 0x95, 0x8f, 0xd0, 0x8e, 0xc8, 0x99, 0xc2,
	0x72, 0xfa, 0x45, 0x92, 0x3e, 0xa4, 0x1c, 0x84, 0x12, 0x99, 0x82, 0x94, 0x96, 0xac, 0x38, 0xa1,
	0x0d, 0x02, 0x9e, 0xa7, 0x31, 0xc5, 0xd3, 0x0d, 0x8c, 0x6e, 0x01, 0xe2, 0xda, 0xd2, 0xd5, 0xcd,
	0xae, 0x83, 0x7b, 0x96, 0xa9, 0x31, 0x3d, 0x2a, 0x2a, 0x4d, 0xfe, 0xa5, 0x63, 0xee, 0x30, 0x38,
	0xfa, 0x00, 0x0a, 0xee, 0xf1, 0x90, 0x45, 0x84, 0x46, 0xa2, 0xa7, 0xf5, 0xf9, 0xda, 0x3d, 0x1e,
	0x62, 0x85, 0xa2, 0x7b, 0xcf, 0x38, 0x5c, 0x5b, 0x7d, 0xc1, 0xc3, 0x6b, 0x41, 0x09, 0x40, 0x88,
	0x65, 0x78, 0x32, 0x9c, 0x63, 0x61, 0x88, 0x0f, 0xe5, 0x7f, 0xc8, 0x41, 0xd3, 0x9f, 0x52, 0xc1,
	0xce, 0x68, 0xe0, 0xa6, 0xca, 0x6f, 0x7c, 0x61, 0x39, 0x29, 0x07, 0xf9, 0x04, 0xaa, 0xfc, 0x3c,
	0x4f, 0xa0, 0x0f, 0xc0, 0x48, 0x36, 0xc7, 0x28, 0x68, 0xf1, 0x15, 0x29, 0x68, 0xe9, 0x84, 0x0a,
	0x2a, 0x7f, 0x2f, 0xc1, 0x5b, 0x31, 0xe3, 0x1f, 0x2b, 0xc0, 0xf1, 0xe9, 0x2f, 0x77, 0x0a, 0xd1,
	0x29, 0xb9, 0x1f, 0xba, 0x07, 0x25, 0x9b, 0xce, 0xce, 0xdb, 0xfc, 0x57, 0xc7, 0x2a, 0x07, 0x63,
	0x44, 0xe1, 0x24, 0xf2, 0x1f, 0x4b, 0xb0, 0x14, 0x67, 0x75, 0x86, 0xe0, 0xb2, 0x0a, 0x73, 0x6c,
	0x6a, 0xcf, 0x86, 0x96, 0xc7, 0xdb, 0x90, 0x2f, 0x1c, 0xc5, 0x23, 0x94, 0x77, 0x60, 0xd1, 0x8b,
	0x41, 0xbe, 0x80, 0xb7, 0xb0, 0xab, 0x8e, 0x49, 0xfe, 0x2e, 0x41, 0x95, 0xe5, 0x16, 0x2c, 0xa9,
	0x62, 0x65, 0x13, 0xec, 0x89, 0x6e, 0x03, 0x49, 0xf4, 0xce, 0x50, 0x27, 0x1e, 0xed, 0xab, 0x67,
	0xb9, 0x73, 0x91, 0x45, 0x55, 0x46, 0x2a, 0x30, 0xb6, 0xb5, 0x8a, 0x12, 0x82, 0x25, 0xf5, 0x59,
	0xf3, 0x53, 0xf6, 0x59, 0x37, 0xe1, 0xad, 0x08, 0xab, 0x33, 0x1c, 0x09, 0xd9, 0xf9, 0xe2, 0x4e,
	0xf8, 0xb1, 0xc3, 0xf4, 0x59, 0xcd, 0x05, 0xd1, 0x91, 0xef, 0xea, 0x5a, 0xd4, 0xd6, 0x35, 0xf4,
	0x31, 0x54, 0x4c, 0x7c, 0xd4, 0x0d, 0x06, 0xd5, 0x0c, 0x8d, 0xd7, 0xb2, 0x89, 0x8f, 0xe8, 0x5f,
	0xf2, 0x63, 0x58, 0x8a, 0xb1, 0x3a, 0xcb, 0xde, 0xff, 0x51, 0x82, 0xb3, 0x6b, 0xb6, 0x35, 0xfc,
	0x4c, 0xb7, 0xdd, 0x91, 0x3a, 0x08, 0xdf, 0x5f, 0xbe, 0x9e, 0xf2, 0xfc, 0x51, 0x20, 0xbd, 0x62,
	0x0a, 0x70, 0x2b, 0xc1, 0x04, 0xe2, 0x4c, 0xf1, 0x4d, 0x07, 0x92, 0xb1, 0xff, 0xcc, 0x27, 0x31,
	0xcf, 0xf1, 0x26, 0x04, 0xfe, 0x2c, 0xd9, 0x67, 0x62, 0x37, 0x2f, 0x3f, 0x6d, 0x37, 0x2f, 0xc5,
	0x0b, 0x17, 0x5e, 0x91, 0x17, 0x3e, 0x71, 0x79, 0xf9, 0x08, 0xc2, 0x9d, 0x56, 0x1a, 0xfe, 0xa6,
	0x6a, 0xd1, 0xae, 0x02, 0xf8, 0x5d, 0x47, 0xfe, 0x56, 0x2d, 0xcb, 0x34, 0x01, 0x2a, 0x72, 0x5a,
	0x22, 0xe2, 0xd1, 0xdb, 0x82, 0x50, 0x1f, 0xec, 0x09, 0xb4, 0x93, 0xb4, 0x74, 0x16, 0xcd, 0xff,
	0x21, 0x07, 0xd0, 0x11, 0xcf, 0x1b, 0xa7, 0x73, 0xe6, 0x57, 0xa1, 0xee, 0x2b, 0x8c, 0x6f, 0xef,
	0x41, 0x2d, 0xd2, 0x88, 0x49, 0x88, 0x82, 0x85, 0xe0, 0xc4, 0x8a, 0x18, 0x8d, 0xce, 0x13, 0xb0,
	0x1a, 0xa6, 0x14, 0x51, 0xff, 0x79, 0x0e, 0x2a, 0xb6, 0x75, 0xd4, 0x25, 0x66, 0xa6, 0x79, 0xef,
	0x37, 0x6d, 0xeb, 0x88, 0x18, 0x9f, 0x86, 0x96, 0x60, 0xce, 0x55, 0x9d, 0x43, 0x32, 0x7f, 0x29,
	0x70, 0x85, 0xae, 0xa1, 0x33, 0x50, 0xdc, 0xd7, 0x07, 0x98, 0xdd, 0xd8, 0x56, 0x14, 0x36, 0x40,
	0xbf, 0xf4, 0x1e, 0x1a, 0x95, 0x33, 0x3f, 0x93, 0x60, 0x6f, 0x8d, 0x7e, 0x92, 0x60, 0xde, 0x97,
	0x1a, 0x75, 0x40, 0xc4, 0xa7, 0x51, 0x7f, 0xf6, 0xc0, 0xd2, 0x98, 0xab, 0x68, 0xa4, 0xb8, 0x74,
	0x46, 0xc8, 0xbc, 0x96, 0x4f, 0x32, 0xae, 0xde, 0x22, 0xfb, 0x22, 0x9b, 0xd6, 0x35, 0xef, 0xe6,
	0xae, 0x64, 0x5b, 0x47, 0x1d, 0x4d, 0x48, 0x83, 0x3d, 0xce, 0x64, 0xd5, 0x05, 0x91, 0xc6, 0x03,
	0xfa, 0x3e, 0xf3, 0x2a, 0xd4, 0xb1, 0x6d, 0x5b, 0x76, 0xd7, 0xc0, 0x8e, 0xa3, 0xf6, 0x31, 0x4f,
	0x80, 0x6b, 0x14, 0xb8, 0xc5, 0x60, 0xf2, 0x8f, 0x79, 0x68, 0xf8, 0x5b, 0xf1, 0xee, 0xeb, 0x74,
	0xcd, 0xbb, 0xaf, 0xd3, 0xc9, 0xd1, 0x81, 0xcd, 0x5c, 0xa1, 0x38, 0xdc, 0xd5, 0x5c, 0x4b, 0x52,
	0x2a, 0x1c, 0xda, 0xd1, 0x48, 0x5c, 0x25, 0x46, 0x66, 0x5a, 0x1a, 0xf6, 0x0f, 0x17, 0x3c, 0x10,
	0x3f, 0xdb, 0x90, 0x8e, 0x14, 0x32, 0xe8, 0x48, 0x31, 0x83, 0x8e, 0x94, 0x12, 0x74, 0x64, 0x11,
	0x4a, 0x7b, 0xa3, 0xde, 0x21, 0x76, 0x79, 0xba, 0xca, 0x47, 0x61, 0xdd, 0x29, 0x47, 0x74, 0x47,
	0xa8, 0x48, 0x25, 0xa8, 0x22, 0xe7, 0xa0, 0xc2, 0x2e, 0x8e, 0xba, 0xae, 0x43, 0x3b, 0xe8, 0x79,
	0xa5, 0xcc, 0x00, 0xbb, 0x0e, 0xfa, 0xd0, 0xcb, 0xc7, 0xaa, 0x49, 0xc6, 0x4e, 0xbd, 0x4e, 0x44,
	0x4b, 0xbc, 0x6c, 0xec, 0x1a, 0x34, 0xe8, 0x33, 0xf8, 0xe7, 0x23, 0x6c, 0x1f, 0xab, 0x7b, 0x03,
	0xdc, 0xaa, 0x51, 0x76, 0xea, 0x04, 0xfa, 0xc4, 0x03, 0x12, 0x81, 0x50, 0x34, 0xdd, 0xd4, 0xf0,
	0x4b, 0xac, 0xb5, 0xea, 0x14, 0x89, 0x8a, 0xba, 0xc3, 0x40, 0xf2, 0x17, 0x80, 0xfc, 0x35, 0x66,
	0x4b, 0xca, 0x22, 0x87, 0x98, 0x8b, 0x1e, 0xa2, 0xfc, 0x37, 0x12, 0x2c, 0x04, 0x17, 0x9b, 0x36,
	0x3c, 0x7e, 0x0c, 0x55, 0x76, 0xd3, 0xd0, 0x25, 0xe6, 0xc9, 0x6b, 0xfe, 0x0b, 0x63, 0xa5, 0xa7,
	0x80, 0xff, 0x08, 0x9b, 0x28, 0xc1, 0x91, 0x65, 0x1f, 0xea, 0x66, 0xbf, 0x4b, 0x38, 0xf3, 0x8c,
	0xa2, 0xc6, 0x81, 0x8f, 0x09, 0x4c, 0xfe, 0x56, 0x82, 0x8b, 0x4f, 0x87, 0x9a, 0xea, 0xe2, 0x40,
	0x9e, 0x30, 0xeb, 0xbb, 0xae, 0x0f, 0xbc, 0x87, 0x55, 0xb9, 0x6c, 0xdd, 0x72, 0x86, 0x2d, 0x6f,
	0xc1, 0x59, 0x05, 0x3b, 0xd8, 0xd4, 0x42, 0x1f, 0xa7, 0xae, 0xf4, 0x87, 0xd0, 0x4e, 0x9a, 0x6e,
	0x96, 0xb3, 0x67, 0x09, 0x5b, 0xd7, 0x26, 0xd3, 0xba, 0xdc, 0xff, 0x90, 0x3c, 0x81, 0xae, 0xe3,
	0xca, 0xff, 0x25, 0xc1, 0xc2, 0x7d, 0xcd, 0x5b, 0xef, 0xb5, 0xe5, 0x85, 0xd1, 0xbc, 0x29, 0x1f,
	0xcf, 0x9b, 0x5e, 0x95, 0x23, 0xe1, 0x2e, 0xd5, 0x1c, 0x19, 0x5e, 0xa8, 0xb0, 0xe9, 0xbd, 0xbd,
	0xbc, 0x2f, 0x2e, 0x73, 0x15, 0xbc, 0x8f, 0x6d, 0x6c, 0xf6, 0xf0, 0xa6, 0xd5, 0x3b, 0x0c, 0xbc,
	0xce, 0x92, 0x82, 0xaf, 0xb3, 0xa6, 0x7d, 0xed, 0x75, 0xf3, 0xcf, 0x25, 0x58, 0x88, 0x75, 0x8d,
	0x50, 0x03, 0xe0, 0xa9, 0xd9, 0xe3, 0xed, 0xb4, 0xe6, 0x29, 0x54, 0x83, 0xb2, 0xd7, 0x5c, 0x6b,
	0x4a, 0xa8, 0x0a, 0x73, 0xbb, 0x16, 0xc5, 0x6e, 0xe6, 0x50, 0x13, 0x6a, 0x8c, 0x70, 0xd4, 0xeb,
	0x61, 0xc7, 0x69, 0xe6, 0x05, 0x64, 0x5d, 0xd5, 0x07, 0x23, 0x1b, 0x37, 0x0b, 0xa8, 0x0e, 0x95,
	0x5d, 0x8b, 0xbf, 0x6d, 0x6b, 0x16, 0x11, 0x82, 0x86, 0xf7, 0xd0, 0x8d, 0x13, 0x95, 0x02, 0x30,
	0x8f, 0x6c, 0xee, 0xe6, 0xb3, 0x60, 0x4f, 0x64, 0xf7, 0x78, 0x88, 0xd1, 0x12, 0x9c, 0x7e, 0x6a,
	0x6a, 0x78, 0x5f, 0x37, 0xb1, 0xe6, 0x7f, 0x6a, 0x9e, 0x42, 0xa7, 0x61, 0x7e, 0x0b, 0xdb, 0x7d,
	0x1c, 0x00, 0xe6, 0xd0, 0x02, 0xd4, 0xb7, 0xf4, 0x97, 0x01, 0x50, 0x5e, 0x2e, 0x94, 0xa5, 0xa6,
	0xb4, 0xf2, 0x3f, 0x4b, 0x50, 0x21, 0xf5, 0xcc, 0x03, 0xcb, 0xb2, 0x35, 0x34, 0x04, 0x44, 0x9f,
	0x82, 0x1a, 0x43, 0xcb, 0x14, 0x0f, 0xac, 0xd1, 0x7b, 0x29, 0x39, 0x53, 0x1c, 0x95, 0xeb, 0x61,
	0xfb, 0x7a, 0x0a, 0x45, 0x04, 0x5d, 0x3e, 0x85, 0x0c, 0xba, 0xe2, 0xae, 0x6e, 0xe0, 0x5d, 0xbd,
	0x77, 0xe8, 0xbd, 0x11, 0x19, 0xb3, 0x62, 0x04, 0xd5, 0x5b, 0x31, 0x52, 0x3d, 0xf3, 0x01, 0x7b,
	0xaf, 0xeb, 0x19, 0xa2, 0x7c, 0x0a, 0x3d, 0x87, 0x33, 0x1b, 0x38, 0xe0, 0x78, 0xbc, 0x05, 0x57,
	0xd2, 0x17, 0x8c, 0x21, 0x9f, 0x70, 0xc9, 0x4d, 0x28, 0xd2, 0x96, 0x2c, 0x4a, 0xf2, 0x4d, 0xc1,
	0xdf, 0x43, 0xb5, 0x2f, 0xa7, 0x23, 0x88, 0xd9, 0xbe, 0x80, 0xf9, 0xc8, 0xaf, 0x28, 0xd0, 0x8d,
	0x04, 0xb2, 0xe4, 0xdf, 0xc3, 0xb4, 0x6f, 0x66, 0x41, 0x15, 0x6b, 0xf5, 0xa1, 0x11, 0x7e, 0x46,
	0x8a, 0x92, 0x9a, 0x02, 0x89, 0x0f, 0xe0, 0xdb, 0x37, 0x32, 0x60, 0x8a, 0x85, 0x0c, 0x68, 0x46,
	0x5f, 0xf5, 0xa3, 0x9b, 0x63, 0x27, 0x08, 0xab, 0xdb, 0x2f, 0x32, 0xe1, 0x8a, 0xe5, 0x8e, 0xa9,
	0x12, 0xc4, 0x1e, 0x8a, 0xa3, 0xdb, 0xc9, 0xd3, 0xa4, 0xbd, 0x60, 0x6f, 0xdf, 0xc9, 0x8c, 0x2f,
	0x96, 0xfe, 0x5d, 0x76, 0x15, 0x94, 0xf4, 0xd8, 0x1a, 0xbd, 0x9f, 0x3c, 0xdd, 0x98, 0x57, 0xe2,
	0xed, 0x95, 0x93, 0x90, 0x08, 0x26, 0xbe, 0xa2, 0x77, 0x38, 0x09, 0xcf, 0x95, 0xa3, 0x76, 0xe7,
	0xcd, 0x97, 0xfe, 0x12, 0xbb, 0xfd, 0xfe, 0x09, 0x28, 0x04, 0x03, 0x56, 0xf4, 0x67, 0x13, 0x9e,
	0x19, 0xde, 0x99, 0xa8, 0x35, 0xd3, 0xd9, 0xe0, 0xe7, 0x30, 0x1f, 0x79, 0x8d, 0x93, 0x68, 0x35,
	0xc9, 0x2f, 0x76, 0xda, 0xe3, 0xe2, 0x35, 0x33, 0xc9, 0xc8, 0x95, 0x18, 0x4a, 0xd1, 0xfe, 0x84,
	0x6b, 0xb3, 0xf6, 0xcd, 0x2c, 0xa8, 0x62, 0x23, 0x0e, 0x75, 0x97, 0x91, 0x6b, 0x25, 0x74, 0x2b,
	0x79, 0x8e, 0xe4, 0x2b, 0xb1, 0xf6, 0xbb, 0x19, 0xb1, 0xc5, 0xa2, 0xbf, 0x03, 0x68, 0xe7, 0x80,
	0xd4, 0x30, 0xe6, 0xbe, 0xde, 0x1f, 0xd9, 0x2a, 0x7b, 0x72, 0x93, 0xe6, 0xa3, 0xe3, 0xa8, 0x29,
	0xba, 0x32, 0x96, 0x42, 0x2c, 0xde, 0x05, 0xd8, 0xc0, 0xee, 0x16, 0x76, 0x6d, 0xa2, 0xa0, 0xd7,
	0x13, 0xcf, 0xdb, 0x47, 0xf0, 0x96, 0x7a, 0x67, 0x22, 0x5e, 0x20, 0x24, 0x34, 0xb7, 0x54, 0x93,
	0x94, 0xef, 0xfe, 0x33, 0xb4, 0x5b, 0x89, 0xe4, 0x51, 0xb4, 0x14, 0x81, 0xa6, 0x62, 0x8b, 0x25,
	0x8f, 0x44, 0x98, 0x0d, 0x74, 0x53, 0xa3, 0xee, 0xc7, 0xe7, 0x39, 0xf9, 0x42, 0x2a, 0xea, 0x7e,
	0xc6, 0xe0, 0x8b, 0x85, 0xbf, 0x96, 0xe8, 0x6f, 0x72, 0x22, 0x08, 0xcf, 0x74, 0xf7, 0x60, 0x7b,
	0xa0, 0x9a, 0x4e, 0x16, 0x16, 0x28, 0xe2, 0x09, 0x58, 0xe0, 0xf8, 0x82, 0x05, 0x0d, 0xea, 0xa1,
	0x1e, 0x29, 0x4a, 0x7a, 0xf3, 0x95, 0xd4, 0xf0, 0x6d, 0x2f, 0x4f, 0x46, 0x14, 0xab, 0x1c, 0x40,
	0xdd, 0x53, 0x69, 0x26, 0xdc, 0x1b, 0x69, 0x9c, 0xfa, 0x38, 0x29, 0x16, 0x99, 0x8c, 0x1a, 0xb4,
	0xc8, 0x78, 0x0b, 0x08, 0x65, 0x6b, 0x1d, 0x8e, 0xb3, 0xc8, 0xf4, 0xbe, 0x12, 0x73, 0x39, 0x91,
	0x76, 0x6b, 0xb2, 0x3f, 0x4b, 0xec, 0x1e, 0x27, 0xba, 0x9c, 0x94, 0xee, 0xad, 0x7c, 0x0a, 0x3d,
	0x83, 0x12, 0xff, 0x31, 0xee, 0xdb, 0xe3, 0x0b, 0x42, 0x3e, 0xfb, 0xb5, 0x09, 0x58, 0x62, 0xe2,
	0x43, 0x58, 0x4a, 0x29, 0x07, 0x13, 0x43, 0xe1, 0xf8, 0xd2, 0x71, 0x92, 0x93, 0x56, 0x01, 0xc5,
	0x7f, 0xf1, 0x92, 0x78, 0x4c, 0xa9, 0x3f, 0x8c, 0xc9, 0xb0, 0x44, 0xfc, 0x47, 0x2b, 0x89, 0x4b,
	0xa4, 0xfe, 0xb6, 0x65, 0xd2, 0x12, 0x4f, 0x00, 0xfc, 0xa2, 0x2f, 0xf1, 0x3c, 0x62, 0x35, 0xe1,
	0x84, 0x29, 0x57, 0xfe, 0xbd, 0x0c, 0x65, 0xef, 0x85, 0xd5, 0x1b, 0xc8, 0xff, 0xdf, 0x40, 0x42,
	0xfe, 0x39, 0xcc, 0x47, 0x7e, 0xaa, 0x91, 0x68, 0x3c, 0xc9, 0x3f, 0xe7, 0x98, 0x74, 0x42, 0xcf,
	0xf8, 0x3f, 0x12, 0x10, 0xb1, 0xf9, 0x9d, 0xb4, 0xa4, 0x3e, 0x1a, 0x96, 0x27, 0x4c, 0xfc, 0xff,
	0x3b, 0x08, 0x3f, 0x06, 0x08, 0x84, 0xdf, 0xf1, 0xf7, 0xe4, 0x24, 0xa2, 0x4c, 0x92, 0x96, 0x91,
	0x18, 0x61, 0x6f, 0x64, 0xb9, 0xd3, 0x4c, 0xf7, 0x91, 0xe9, 0x71, 0x75, 0xeb, 0x84, 0x3e, 0x72,
	0x02, 0xf7, 0x0e, 0xf1, 0x24, 0xd1, 0x76, 0x52, 0x8a, 0x27, 0x49, 0x69, 0x62, 0x25, 0xc6, 0x94,
	0xf4, 0x1e, 0xd5, 0x6b, 0xf1, 0x2d, 0xab, 0x77, 0x7f, 0xeb, 0xfd, 0xbe, 0xee, 0x1e, 0x8c, 0xf6,
	0xc8, 0x97, 0x3b, 0x0c, 0xf5, 0x5d, 0xdd, 0xe2, 0x7f, 0xdd, 0xf1, 0x74, 0xef, 0x0e, 0xa5, 0xbe,
	0x43, 0xd6, 0x18, 0xee, 0xed, 0x95, 0xe8, 0xe8, 0xee, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x48,
	0x17, 0x7f, 0x8d, 0x97, 0x44, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataCoordClient is the client API for DataCoord service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataCoordClient interface {
	GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error)
	GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	Flush(ctx context.Context, in *FlushRequest, opts ...grpc.CallOption) (*FlushResponse, error)
	AssignSegmentID(ctx context.Context, in *AssignSegmentIDRequest, opts ...grpc.CallOption) (*AssignSegmentIDResponse, error)
	GetSegmentInfo(ctx context.Context, in *GetSegmentInfoRequest, opts ...grpc.CallOption) (*GetSegmentInfoResponse, error)
	GetSegmentStates(ctx context.Context, in *GetSegmentStatesRequest, opts ...grpc.CallOption) (*GetSegmentStatesResponse, error)
	GetInsertBinlogPaths(ctx context.Context, in *GetInsertBinlogPathsRequest, opts ...grpc.CallOption) (*GetInsertBinlogPathsResponse, error)
	GetCollectionStatistics(ctx context.Context, in *GetCollectionStatisticsRequest, opts ...grpc.CallOption) (*GetCollectionStatisticsResponse, error)
	GetPartitionStatistics(ctx context.Context, in *GetPartitionStatisticsRequest, opts ...grpc.CallOption) (*GetPartitionStatisticsResponse, error)
	GetSegmentInfoChannel(ctx context.Context, in *GetSegmentInfoChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	SaveBinlogPaths(ctx context.Context, in *SaveBinlogPathsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	GetRecoveryInfo(ctx context.Context, in *GetRecoveryInfoRequest, opts ...grpc.CallOption) (*GetRecoveryInfoResponse, error)
	GetFlushedSegments(ctx context.Context, in *GetFlushedSegmentsRequest, opts ...grpc.CallOption) (*GetFlushedSegmentsResponse, error)
	ShowConfigurations(ctx context.Context, in *internalpb.ShowConfigurationsRequest, opts ...grpc.CallOption) (*internalpb.ShowConfigurationsResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
	GetMetrics(ctx context.Context, in *milvuspb.GetMetricsRequest, opts ...grpc.CallOption) (*milvuspb.GetMetricsResponse, error)
	ManualCompaction(ctx context.Context, in *milvuspb.ManualCompactionRequest, opts ...grpc.CallOption) (*milvuspb.ManualCompactionResponse, error)
	GetCompactionState(ctx context.Context, in *milvuspb.GetCompactionStateRequest, opts ...grpc.CallOption) (*milvuspb.GetCompactionStateResponse, error)
	GetCompactionStateWithPlans(ctx context.Context, in *milvuspb.GetCompactionPlansRequest, opts ...grpc.CallOption) (*milvuspb.GetCompactionPlansResponse, error)
	WatchChannels(ctx context.Context, in *WatchChannelsRequest, opts ...grpc.CallOption) (*WatchChannelsResponse, error)
	GetFlushState(ctx context.Context, in *milvuspb.GetFlushStateRequest, opts ...grpc.CallOption) (*milvuspb.GetFlushStateResponse, error)
	DropVirtualChannel(ctx context.Context, in *DropVirtualChannelRequest, opts ...grpc.CallOption) (*DropVirtualChannelResponse, error)
	SetSegmentState(ctx context.Context, in *SetSegmentStateRequest, opts ...grpc.CallOption) (*SetSegmentStateResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+24+--+Support+bulk+load
	Import(ctx context.Context, in *ImportTaskRequest, opts ...grpc.CallOption) (*ImportTaskResponse, error)
	UpdateSegmentStatistics(ctx context.Context, in *UpdateSegmentStatisticsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	AcquireSegmentLock(ctx context.Context, in *AcquireSegmentLockRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ReleaseSegmentLock(ctx context.Context, in *ReleaseSegmentLockRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	AddSegment(ctx context.Context, in *AddSegmentRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
}

type dataCoordClient struct {
	cc *grpc.ClientConn
}

func NewDataCoordClient(cc *grpc.ClientConn) DataCoordClient {
	return &dataCoordClient{cc}
}

func (c *dataCoordClient) GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error) {
	out := new(internalpb.ComponentStates)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetComponentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) GetTimeTickChannel(ctx context.Context, in *internalpb.GetTimeTickChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetTimeTickChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetStatisticsChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) Flush(ctx context.Context, in *FlushRequest, opts ...grpc.CallOption) (*FlushResponse, error) {
	out := new(FlushResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/Flush", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) AssignSegmentID(ctx context.Context, in *AssignSegmentIDRequest, opts ...grpc.CallOption) (*AssignSegmentIDResponse, error) {
	out := new(AssignSegmentIDResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/AssignSegmentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) GetSegmentInfo(ctx context.Context, in *GetSegmentInfoRequest, opts ...grpc.CallOption) (*GetSegmentInfoResponse, error) {
	out := new(GetSegmentInfoResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetSegmentInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) GetSegmentStates(ctx context.Context, in *GetSegmentStatesRequest, opts ...grpc.CallOption) (*GetSegmentStatesResponse, error) {
	out := new(GetSegmentStatesResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetSegmentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) GetInsertBinlogPaths(ctx context.Context, in *GetInsertBinlogPathsRequest, opts ...grpc.CallOption) (*GetInsertBinlogPathsResponse, error) {
	out := new(GetInsertBinlogPathsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetInsertBinlogPaths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) GetCollectionStatistics(ctx context.Context, in *GetCollectionStatisticsRequest, opts ...grpc.CallOption) (*GetCollectionStatisticsResponse, error) {
	out := new(GetCollectionStatisticsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetCollectionStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) GetPartitionStatistics(ctx context.Context, in *GetPartitionStatisticsRequest, opts ...grpc.CallOption) (*GetPartitionStatisticsResponse, error) {
	out := new(GetPartitionStatisticsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetPartitionStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) GetSegmentInfoChannel(ctx context.Context, in *GetSegmentInfoChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetSegmentInfoChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) SaveBinlogPaths(ctx context.Context, in *SaveBinlogPathsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/SaveBinlogPaths", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) GetRecoveryInfo(ctx context.Context, in *GetRecoveryInfoRequest, opts ...grpc.CallOption) (*GetRecoveryInfoResponse, error) {
	out := new(GetRecoveryInfoResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetRecoveryInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) GetFlushedSegments(ctx context.Context, in *GetFlushedSegmentsRequest, opts ...grpc.CallOption) (*GetFlushedSegmentsResponse, error) {
	out := new(GetFlushedSegmentsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetFlushedSegments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) ShowConfigurations(ctx context.Context, in *internalpb.ShowConfigurationsRequest, opts ...grpc.CallOption) (*internalpb.ShowConfigurationsResponse, error) {
	out := new(internalpb.ShowConfigurationsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/ShowConfigurations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) GetMetrics(ctx context.Context, in *milvuspb.GetMetricsRequest, opts ...grpc.CallOption) (*milvuspb.GetMetricsResponse, error) {
	out := new(milvuspb.GetMetricsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) ManualCompaction(ctx context.Context, in *milvuspb.ManualCompactionRequest, opts ...grpc.CallOption) (*milvuspb.ManualCompactionResponse, error) {
	out := new(milvuspb.ManualCompactionResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/ManualCompaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) GetCompactionState(ctx context.Context, in *milvuspb.GetCompactionStateRequest, opts ...grpc.CallOption) (*milvuspb.GetCompactionStateResponse, error) {
	out := new(milvuspb.GetCompactionStateResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetCompactionState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) GetCompactionStateWithPlans(ctx context.Context, in *milvuspb.GetCompactionPlansRequest, opts ...grpc.CallOption) (*milvuspb.GetCompactionPlansResponse, error) {
	out := new(milvuspb.GetCompactionPlansResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetCompactionStateWithPlans", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) WatchChannels(ctx context.Context, in *WatchChannelsRequest, opts ...grpc.CallOption) (*WatchChannelsResponse, error) {
	out := new(WatchChannelsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/WatchChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) GetFlushState(ctx context.Context, in *milvuspb.GetFlushStateRequest, opts ...grpc.CallOption) (*milvuspb.GetFlushStateResponse, error) {
	out := new(milvuspb.GetFlushStateResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/GetFlushState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) DropVirtualChannel(ctx context.Context, in *DropVirtualChannelRequest, opts ...grpc.CallOption) (*DropVirtualChannelResponse, error) {
	out := new(DropVirtualChannelResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/DropVirtualChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) SetSegmentState(ctx context.Context, in *SetSegmentStateRequest, opts ...grpc.CallOption) (*SetSegmentStateResponse, error) {
	out := new(SetSegmentStateResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/SetSegmentState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) Import(ctx context.Context, in *ImportTaskRequest, opts ...grpc.CallOption) (*ImportTaskResponse, error) {
	out := new(ImportTaskResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/Import", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) UpdateSegmentStatistics(ctx context.Context, in *UpdateSegmentStatisticsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/UpdateSegmentStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) AcquireSegmentLock(ctx context.Context, in *AcquireSegmentLockRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/AcquireSegmentLock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) ReleaseSegmentLock(ctx context.Context, in *ReleaseSegmentLockRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/ReleaseSegmentLock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCoordClient) AddSegment(ctx context.Context, in *AddSegmentRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataCoord/AddSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataCoordServer is the server API for DataCoord service.
type DataCoordServer interface {
	GetComponentStates(context.Context, *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error)
	GetTimeTickChannel(context.Context, *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error)
	GetStatisticsChannel(context.Context, *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error)
	Flush(context.Context, *FlushRequest) (*FlushResponse, error)
	AssignSegmentID(context.Context, *AssignSegmentIDRequest) (*AssignSegmentIDResponse, error)
	GetSegmentInfo(context.Context, *GetSegmentInfoRequest) (*GetSegmentInfoResponse, error)
	GetSegmentStates(context.Context, *GetSegmentStatesRequest) (*GetSegmentStatesResponse, error)
	GetInsertBinlogPaths(context.Context, *GetInsertBinlogPathsRequest) (*GetInsertBinlogPathsResponse, error)
	GetCollectionStatistics(context.Context, *GetCollectionStatisticsRequest) (*GetCollectionStatisticsResponse, error)
	GetPartitionStatistics(context.Context, *GetPartitionStatisticsRequest) (*GetPartitionStatisticsResponse, error)
	GetSegmentInfoChannel(context.Context, *GetSegmentInfoChannelRequest) (*milvuspb.StringResponse, error)
	SaveBinlogPaths(context.Context, *SaveBinlogPathsRequest) (*commonpb.Status, error)
	GetRecoveryInfo(context.Context, *GetRecoveryInfoRequest) (*GetRecoveryInfoResponse, error)
	GetFlushedSegments(context.Context, *GetFlushedSegmentsRequest) (*GetFlushedSegmentsResponse, error)
	ShowConfigurations(context.Context, *internalpb.ShowConfigurationsRequest) (*internalpb.ShowConfigurationsResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
	GetMetrics(context.Context, *milvuspb.GetMetricsRequest) (*milvuspb.GetMetricsResponse, error)
	ManualCompaction(context.Context, *milvuspb.ManualCompactionRequest) (*milvuspb.ManualCompactionResponse, error)
	GetCompactionState(context.Context, *milvuspb.GetCompactionStateRequest) (*milvuspb.GetCompactionStateResponse, error)
	GetCompactionStateWithPlans(context.Context, *milvuspb.GetCompactionPlansRequest) (*milvuspb.GetCompactionPlansResponse, error)
	WatchChannels(context.Context, *WatchChannelsRequest) (*WatchChannelsResponse, error)
	GetFlushState(context.Context, *milvuspb.GetFlushStateRequest) (*milvuspb.GetFlushStateResponse, error)
	DropVirtualChannel(context.Context, *DropVirtualChannelRequest) (*DropVirtualChannelResponse, error)
	SetSegmentState(context.Context, *SetSegmentStateRequest) (*SetSegmentStateResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+24+--+Support+bulk+load
	Import(context.Context, *ImportTaskRequest) (*ImportTaskResponse, error)
	UpdateSegmentStatistics(context.Context, *UpdateSegmentStatisticsRequest) (*commonpb.Status, error)
	AcquireSegmentLock(context.Context, *AcquireSegmentLockRequest) (*commonpb.Status, error)
	ReleaseSegmentLock(context.Context, *ReleaseSegmentLockRequest) (*commonpb.Status, error)
	AddSegment(context.Context, *AddSegmentRequest) (*commonpb.Status, error)
}

// UnimplementedDataCoordServer can be embedded to have forward compatible implementations.
type UnimplementedDataCoordServer struct {
}

func (*UnimplementedDataCoordServer) GetComponentStates(ctx context.Context, req *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComponentStates not implemented")
}
func (*UnimplementedDataCoordServer) GetTimeTickChannel(ctx context.Context, req *internalpb.GetTimeTickChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeTickChannel not implemented")
}
func (*UnimplementedDataCoordServer) GetStatisticsChannel(ctx context.Context, req *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatisticsChannel not implemented")
}
func (*UnimplementedDataCoordServer) Flush(ctx context.Context, req *FlushRequest) (*FlushResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Flush not implemented")
}
func (*UnimplementedDataCoordServer) AssignSegmentID(ctx context.Context, req *AssignSegmentIDRequest) (*AssignSegmentIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignSegmentID not implemented")
}
func (*UnimplementedDataCoordServer) GetSegmentInfo(ctx context.Context, req *GetSegmentInfoRequest) (*GetSegmentInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSegmentInfo not implemented")
}
func (*UnimplementedDataCoordServer) GetSegmentStates(ctx context.Context, req *GetSegmentStatesRequest) (*GetSegmentStatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSegmentStates not implemented")
}
func (*UnimplementedDataCoordServer) GetInsertBinlogPaths(ctx context.Context, req *GetInsertBinlogPathsRequest) (*GetInsertBinlogPathsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInsertBinlogPaths not implemented")
}
func (*UnimplementedDataCoordServer) GetCollectionStatistics(ctx context.Context, req *GetCollectionStatisticsRequest) (*GetCollectionStatisticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollectionStatistics not implemented")
}
func (*UnimplementedDataCoordServer) GetPartitionStatistics(ctx context.Context, req *GetPartitionStatisticsRequest) (*GetPartitionStatisticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPartitionStatistics not implemented")
}
func (*UnimplementedDataCoordServer) GetSegmentInfoChannel(ctx context.Context, req *GetSegmentInfoChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSegmentInfoChannel not implemented")
}
func (*UnimplementedDataCoordServer) SaveBinlogPaths(ctx context.Context, req *SaveBinlogPathsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveBinlogPaths not implemented")
}
func (*UnimplementedDataCoordServer) GetRecoveryInfo(ctx context.Context, req *GetRecoveryInfoRequest) (*GetRecoveryInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecoveryInfo not implemented")
}
func (*UnimplementedDataCoordServer) GetFlushedSegments(ctx context.Context, req *GetFlushedSegmentsRequest) (*GetFlushedSegmentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFlushedSegments not implemented")
}
func (*UnimplementedDataCoordServer) ShowConfigurations(ctx context.Context, req *internalpb.ShowConfigurationsRequest) (*internalpb.ShowConfigurationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowConfigurations not implemented")
}
func (*UnimplementedDataCoordServer) GetMetrics(ctx context.Context, req *milvuspb.GetMetricsRequest) (*milvuspb.GetMetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetrics not implemented")
}
func (*UnimplementedDataCoordServer) ManualCompaction(ctx context.Context, req *milvuspb.ManualCompactionRequest) (*milvuspb.ManualCompactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManualCompaction not implemented")
}
func (*UnimplementedDataCoordServer) GetCompactionState(ctx context.Context, req *milvuspb.GetCompactionStateRequest) (*milvuspb.GetCompactionStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompactionState not implemented")
}
func (*UnimplementedDataCoordServer) GetCompactionStateWithPlans(ctx context.Context, req *milvuspb.GetCompactionPlansRequest) (*milvuspb.GetCompactionPlansResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompactionStateWithPlans not implemented")
}
func (*UnimplementedDataCoordServer) WatchChannels(ctx context.Context, req *WatchChannelsRequest) (*WatchChannelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WatchChannels not implemented")
}
func (*UnimplementedDataCoordServer) GetFlushState(ctx context.Context, req *milvuspb.GetFlushStateRequest) (*milvuspb.GetFlushStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFlushState not implemented")
}
func (*UnimplementedDataCoordServer) DropVirtualChannel(ctx context.Context, req *DropVirtualChannelRequest) (*DropVirtualChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropVirtualChannel not implemented")
}
func (*UnimplementedDataCoordServer) SetSegmentState(ctx context.Context, req *SetSegmentStateRequest) (*SetSegmentStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSegmentState not implemented")
}
func (*UnimplementedDataCoordServer) Import(ctx context.Context, req *ImportTaskRequest) (*ImportTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Import not implemented")
}
func (*UnimplementedDataCoordServer) UpdateSegmentStatistics(ctx context.Context, req *UpdateSegmentStatisticsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSegmentStatistics not implemented")
}
func (*UnimplementedDataCoordServer) AcquireSegmentLock(ctx context.Context, req *AcquireSegmentLockRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcquireSegmentLock not implemented")
}
func (*UnimplementedDataCoordServer) ReleaseSegmentLock(ctx context.Context, req *ReleaseSegmentLockRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseSegmentLock not implemented")
}
func (*UnimplementedDataCoordServer) AddSegment(ctx context.Context, req *AddSegmentRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSegment not implemented")
}

func RegisterDataCoordServer(s *grpc.Server, srv DataCoordServer) {
	s.RegisterService(&_DataCoord_serviceDesc, srv)
}

func _DataCoord_GetComponentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetComponentStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetComponentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetComponentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetComponentStates(ctx, req.(*internalpb.GetComponentStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_GetTimeTickChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetTimeTickChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetTimeTickChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetTimeTickChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetTimeTickChannel(ctx, req.(*internalpb.GetTimeTickChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_GetStatisticsChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetStatisticsChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetStatisticsChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetStatisticsChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetStatisticsChannel(ctx, req.(*internalpb.GetStatisticsChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_Flush_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlushRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).Flush(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/Flush",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).Flush(ctx, req.(*FlushRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_AssignSegmentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignSegmentIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).AssignSegmentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/AssignSegmentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).AssignSegmentID(ctx, req.(*AssignSegmentIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_GetSegmentInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSegmentInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetSegmentInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetSegmentInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetSegmentInfo(ctx, req.(*GetSegmentInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_GetSegmentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSegmentStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetSegmentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetSegmentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetSegmentStates(ctx, req.(*GetSegmentStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_GetInsertBinlogPaths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInsertBinlogPathsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetInsertBinlogPaths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetInsertBinlogPaths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetInsertBinlogPaths(ctx, req.(*GetInsertBinlogPathsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_GetCollectionStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectionStatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetCollectionStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetCollectionStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetCollectionStatistics(ctx, req.(*GetCollectionStatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_GetPartitionStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPartitionStatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetPartitionStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetPartitionStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetPartitionStatistics(ctx, req.(*GetPartitionStatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_GetSegmentInfoChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSegmentInfoChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetSegmentInfoChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetSegmentInfoChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetSegmentInfoChannel(ctx, req.(*GetSegmentInfoChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_SaveBinlogPaths_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveBinlogPathsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).SaveBinlogPaths(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/SaveBinlogPaths",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).SaveBinlogPaths(ctx, req.(*SaveBinlogPathsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_GetRecoveryInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecoveryInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetRecoveryInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetRecoveryInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetRecoveryInfo(ctx, req.(*GetRecoveryInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_GetFlushedSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFlushedSegmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetFlushedSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetFlushedSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetFlushedSegments(ctx, req.(*GetFlushedSegmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_ShowConfigurations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.ShowConfigurationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).ShowConfigurations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/ShowConfigurations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).ShowConfigurations(ctx, req.(*internalpb.ShowConfigurationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_GetMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.GetMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetMetrics(ctx, req.(*milvuspb.GetMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_ManualCompaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.ManualCompactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).ManualCompaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/ManualCompaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).ManualCompaction(ctx, req.(*milvuspb.ManualCompactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_GetCompactionState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.GetCompactionStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetCompactionState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetCompactionState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetCompactionState(ctx, req.(*milvuspb.GetCompactionStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_GetCompactionStateWithPlans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.GetCompactionPlansRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetCompactionStateWithPlans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetCompactionStateWithPlans",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetCompactionStateWithPlans(ctx, req.(*milvuspb.GetCompactionPlansRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_WatchChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchChannelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).WatchChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/WatchChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).WatchChannels(ctx, req.(*WatchChannelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_GetFlushState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.GetFlushStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).GetFlushState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/GetFlushState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).GetFlushState(ctx, req.(*milvuspb.GetFlushStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_DropVirtualChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DropVirtualChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).DropVirtualChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/DropVirtualChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).DropVirtualChannel(ctx, req.(*DropVirtualChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_SetSegmentState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSegmentStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).SetSegmentState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/SetSegmentState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).SetSegmentState(ctx, req.(*SetSegmentStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_Import_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).Import(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/Import",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).Import(ctx, req.(*ImportTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_UpdateSegmentStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSegmentStatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).UpdateSegmentStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/UpdateSegmentStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).UpdateSegmentStatistics(ctx, req.(*UpdateSegmentStatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_AcquireSegmentLock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcquireSegmentLockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).AcquireSegmentLock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/AcquireSegmentLock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).AcquireSegmentLock(ctx, req.(*AcquireSegmentLockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_ReleaseSegmentLock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseSegmentLockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).ReleaseSegmentLock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/ReleaseSegmentLock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).ReleaseSegmentLock(ctx, req.(*ReleaseSegmentLockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCoord_AddSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddSegmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCoordServer).AddSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataCoord/AddSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCoordServer).AddSegment(ctx, req.(*AddSegmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataCoord_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milvus.proto.data.DataCoord",
	HandlerType: (*DataCoordServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetComponentStates",
			Handler:    _DataCoord_GetComponentStates_Handler,
		},
		{
			MethodName: "GetTimeTickChannel",
			Handler:    _DataCoord_GetTimeTickChannel_Handler,
		},
		{
			MethodName: "GetStatisticsChannel",
			Handler:    _DataCoord_GetStatisticsChannel_Handler,
		},
		{
			MethodName: "Flush",
			Handler:    _DataCoord_Flush_Handler,
		},
		{
			MethodName: "AssignSegmentID",
			Handler:    _DataCoord_AssignSegmentID_Handler,
		},
		{
			MethodName: "GetSegmentInfo",
			Handler:    _DataCoord_GetSegmentInfo_Handler,
		},
		{
			MethodName: "GetSegmentStates",
			Handler:    _DataCoord_GetSegmentStates_Handler,
		},
		{
			MethodName: "GetInsertBinlogPaths",
			Handler:    _DataCoord_GetInsertBinlogPaths_Handler,
		},
		{
			MethodName: "GetCollectionStatistics",
			Handler:    _DataCoord_GetCollectionStatistics_Handler,
		},
		{
			MethodName: "GetPartitionStatistics",
			Handler:    _DataCoord_GetPartitionStatistics_Handler,
		},
		{
			MethodName: "GetSegmentInfoChannel",
			Handler:    _DataCoord_GetSegmentInfoChannel_Handler,
		},
		{
			MethodName: "SaveBinlogPaths",
			Handler:    _DataCoord_SaveBinlogPaths_Handler,
		},
		{
			MethodName: "GetRecoveryInfo",
			Handler:    _DataCoord_GetRecoveryInfo_Handler,
		},
		{
			MethodName: "GetFlushedSegments",
			Handler:    _DataCoord_GetFlushedSegments_Handler,
		},
		{
			MethodName: "ShowConfigurations",
			Handler:    _DataCoord_ShowConfigurations_Handler,
		},
		{
			MethodName: "GetMetrics",
			Handler:    _DataCoord_GetMetrics_Handler,
		},
		{
			MethodName: "ManualCompaction",
			Handler:    _DataCoord_ManualCompaction_Handler,
		},
		{
			MethodName: "GetCompactionState",
			Handler:    _DataCoord_GetCompactionState_Handler,
		},
		{
			MethodName: "GetCompactionStateWithPlans",
			Handler:    _DataCoord_GetCompactionStateWithPlans_Handler,
		},
		{
			MethodName: "WatchChannels",
			Handler:    _DataCoord_WatchChannels_Handler,
		},
		{
			MethodName: "GetFlushState",
			Handler:    _DataCoord_GetFlushState_Handler,
		},
		{
			MethodName: "DropVirtualChannel",
			Handler:    _DataCoord_DropVirtualChannel_Handler,
		},
		{
			MethodName: "SetSegmentState",
			Handler:    _DataCoord_SetSegmentState_Handler,
		},
		{
			MethodName: "Import",
			Handler:    _DataCoord_Import_Handler,
		},
		{
			MethodName: "UpdateSegmentStatistics",
			Handler:    _DataCoord_UpdateSegmentStatistics_Handler,
		},
		{
			MethodName: "AcquireSegmentLock",
			Handler:    _DataCoord_AcquireSegmentLock_Handler,
		},
		{
			MethodName: "ReleaseSegmentLock",
			Handler:    _DataCoord_ReleaseSegmentLock_Handler,
		},
		{
			MethodName: "AddSegment",
			Handler:    _DataCoord_AddSegment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "data_coord.proto",
}

// DataNodeClient is the client API for DataNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataNodeClient interface {
	GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error)
	GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error)
	WatchDmChannels(ctx context.Context, in *WatchDmChannelsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	FlushSegments(ctx context.Context, in *FlushSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ShowConfigurations(ctx context.Context, in *internalpb.ShowConfigurationsRequest, opts ...grpc.CallOption) (*internalpb.ShowConfigurationsResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
	GetMetrics(ctx context.Context, in *milvuspb.GetMetricsRequest, opts ...grpc.CallOption) (*milvuspb.GetMetricsResponse, error)
	Compaction(ctx context.Context, in *CompactionPlan, opts ...grpc.CallOption) (*commonpb.Status, error)
	GetCompactionState(ctx context.Context, in *CompactionStateRequest, opts ...grpc.CallOption) (*CompactionStateResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+24+--+Support+bulk+load
	Import(ctx context.Context, in *ImportTaskRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
	ResendSegmentStats(ctx context.Context, in *ResendSegmentStatsRequest, opts ...grpc.CallOption) (*ResendSegmentStatsResponse, error)
	AddSegment(ctx context.Context, in *AddSegmentRequest, opts ...grpc.CallOption) (*commonpb.Status, error)
}

type dataNodeClient struct {
	cc *grpc.ClientConn
}

func NewDataNodeClient(cc *grpc.ClientConn) DataNodeClient {
	return &dataNodeClient{cc}
}

func (c *dataNodeClient) GetComponentStates(ctx context.Context, in *internalpb.GetComponentStatesRequest, opts ...grpc.CallOption) (*internalpb.ComponentStates, error) {
	out := new(internalpb.ComponentStates)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/GetComponentStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataNodeClient) GetStatisticsChannel(ctx context.Context, in *internalpb.GetStatisticsChannelRequest, opts ...grpc.CallOption) (*milvuspb.StringResponse, error) {
	out := new(milvuspb.StringResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/GetStatisticsChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataNodeClient) WatchDmChannels(ctx context.Context, in *WatchDmChannelsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/WatchDmChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataNodeClient) FlushSegments(ctx context.Context, in *FlushSegmentsRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/FlushSegments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataNodeClient) ShowConfigurations(ctx context.Context, in *internalpb.ShowConfigurationsRequest, opts ...grpc.CallOption) (*internalpb.ShowConfigurationsResponse, error) {
	out := new(internalpb.ShowConfigurationsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/ShowConfigurations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataNodeClient) GetMetrics(ctx context.Context, in *milvuspb.GetMetricsRequest, opts ...grpc.CallOption) (*milvuspb.GetMetricsResponse, error) {
	out := new(milvuspb.GetMetricsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/GetMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataNodeClient) Compaction(ctx context.Context, in *CompactionPlan, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/Compaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataNodeClient) GetCompactionState(ctx context.Context, in *CompactionStateRequest, opts ...grpc.CallOption) (*CompactionStateResponse, error) {
	out := new(CompactionStateResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/GetCompactionState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataNodeClient) Import(ctx context.Context, in *ImportTaskRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/Import", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataNodeClient) ResendSegmentStats(ctx context.Context, in *ResendSegmentStatsRequest, opts ...grpc.CallOption) (*ResendSegmentStatsResponse, error) {
	out := new(ResendSegmentStatsResponse)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/ResendSegmentStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataNodeClient) AddSegment(ctx context.Context, in *AddSegmentRequest, opts ...grpc.CallOption) (*commonpb.Status, error) {
	out := new(commonpb.Status)
	err := c.cc.Invoke(ctx, "/milvus.proto.data.DataNode/AddSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataNodeServer is the server API for DataNode service.
type DataNodeServer interface {
	GetComponentStates(context.Context, *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error)
	GetStatisticsChannel(context.Context, *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error)
	WatchDmChannels(context.Context, *WatchDmChannelsRequest) (*commonpb.Status, error)
	FlushSegments(context.Context, *FlushSegmentsRequest) (*commonpb.Status, error)
	ShowConfigurations(context.Context, *internalpb.ShowConfigurationsRequest) (*internalpb.ShowConfigurationsResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+8+--+Add+metrics+for+proxy
	GetMetrics(context.Context, *milvuspb.GetMetricsRequest) (*milvuspb.GetMetricsResponse, error)
	Compaction(context.Context, *CompactionPlan) (*commonpb.Status, error)
	GetCompactionState(context.Context, *CompactionStateRequest) (*CompactionStateResponse, error)
	// https://wiki.lfaidata.foundation/display/MIL/MEP+24+--+Support+bulk+load
	Import(context.Context, *ImportTaskRequest) (*commonpb.Status, error)
	ResendSegmentStats(context.Context, *ResendSegmentStatsRequest) (*ResendSegmentStatsResponse, error)
	AddSegment(context.Context, *AddSegmentRequest) (*commonpb.Status, error)
}

// UnimplementedDataNodeServer can be embedded to have forward compatible implementations.
type UnimplementedDataNodeServer struct {
}

func (*UnimplementedDataNodeServer) GetComponentStates(ctx context.Context, req *internalpb.GetComponentStatesRequest) (*internalpb.ComponentStates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComponentStates not implemented")
}
func (*UnimplementedDataNodeServer) GetStatisticsChannel(ctx context.Context, req *internalpb.GetStatisticsChannelRequest) (*milvuspb.StringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatisticsChannel not implemented")
}
func (*UnimplementedDataNodeServer) WatchDmChannels(ctx context.Context, req *WatchDmChannelsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WatchDmChannels not implemented")
}
func (*UnimplementedDataNodeServer) FlushSegments(ctx context.Context, req *FlushSegmentsRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FlushSegments not implemented")
}
func (*UnimplementedDataNodeServer) ShowConfigurations(ctx context.Context, req *internalpb.ShowConfigurationsRequest) (*internalpb.ShowConfigurationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowConfigurations not implemented")
}
func (*UnimplementedDataNodeServer) GetMetrics(ctx context.Context, req *milvuspb.GetMetricsRequest) (*milvuspb.GetMetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetrics not implemented")
}
func (*UnimplementedDataNodeServer) Compaction(ctx context.Context, req *CompactionPlan) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Compaction not implemented")
}
func (*UnimplementedDataNodeServer) GetCompactionState(ctx context.Context, req *CompactionStateRequest) (*CompactionStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompactionState not implemented")
}
func (*UnimplementedDataNodeServer) Import(ctx context.Context, req *ImportTaskRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Import not implemented")
}
func (*UnimplementedDataNodeServer) ResendSegmentStats(ctx context.Context, req *ResendSegmentStatsRequest) (*ResendSegmentStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResendSegmentStats not implemented")
}
func (*UnimplementedDataNodeServer) AddSegment(ctx context.Context, req *AddSegmentRequest) (*commonpb.Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSegment not implemented")
}

func RegisterDataNodeServer(s *grpc.Server, srv DataNodeServer) {
	s.RegisterService(&_DataNode_serviceDesc, srv)
}

func _DataNode_GetComponentStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetComponentStatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).GetComponentStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/GetComponentStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).GetComponentStates(ctx, req.(*internalpb.GetComponentStatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataNode_GetStatisticsChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.GetStatisticsChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).GetStatisticsChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/GetStatisticsChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).GetStatisticsChannel(ctx, req.(*internalpb.GetStatisticsChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataNode_WatchDmChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WatchDmChannelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).WatchDmChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/WatchDmChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).WatchDmChannels(ctx, req.(*WatchDmChannelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataNode_FlushSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlushSegmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).FlushSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/FlushSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).FlushSegments(ctx, req.(*FlushSegmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataNode_ShowConfigurations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(internalpb.ShowConfigurationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).ShowConfigurations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/ShowConfigurations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).ShowConfigurations(ctx, req.(*internalpb.ShowConfigurationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataNode_GetMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(milvuspb.GetMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).GetMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/GetMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).GetMetrics(ctx, req.(*milvuspb.GetMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataNode_Compaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompactionPlan)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).Compaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/Compaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).Compaction(ctx, req.(*CompactionPlan))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataNode_GetCompactionState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompactionStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).GetCompactionState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/GetCompactionState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).GetCompactionState(ctx, req.(*CompactionStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataNode_Import_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).Import(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/Import",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).Import(ctx, req.(*ImportTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataNode_ResendSegmentStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResendSegmentStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).ResendSegmentStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/ResendSegmentStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).ResendSegmentStats(ctx, req.(*ResendSegmentStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataNode_AddSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddSegmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataNodeServer).AddSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milvus.proto.data.DataNode/AddSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataNodeServer).AddSegment(ctx, req.(*AddSegmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milvus.proto.data.DataNode",
	HandlerType: (*DataNodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetComponentStates",
			Handler:    _DataNode_GetComponentStates_Handler,
		},
		{
			MethodName: "GetStatisticsChannel",
			Handler:    _DataNode_GetStatisticsChannel_Handler,
		},
		{
			MethodName: "WatchDmChannels",
			Handler:    _DataNode_WatchDmChannels_Handler,
		},
		{
			MethodName: "FlushSegments",
			Handler:    _DataNode_FlushSegments_Handler,
		},
		{
			MethodName: "ShowConfigurations",
			Handler:    _DataNode_ShowConfigurations_Handler,
		},
		{
			MethodName: "GetMetrics",
			Handler:    _DataNode_GetMetrics_Handler,
		},
		{
			MethodName: "Compaction",
			Handler:    _DataNode_Compaction_Handler,
		},
		{
			MethodName: "GetCompactionState",
			Handler:    _DataNode_GetCompactionState_Handler,
		},
		{
			MethodName: "Import",
			Handler:    _DataNode_Import_Handler,
		},
		{
			MethodName: "ResendSegmentStats",
			Handler:    _DataNode_ResendSegmentStats_Handler,
		},
		{
			MethodName: "AddSegment",
			Handler:    _DataNode_AddSegment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "data_coord.proto",
}
